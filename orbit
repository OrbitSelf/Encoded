from concurrent.futures import wait
from copy import error
import inspect
from math import e
from multiprocessing import context
from multiprocessing.connection import Client
import numbers
from ssl import CHANNEL_BINDING_TYPES
from typing import NoReturn
from unicodedata import name
import discord
from discord.ext import commands
import random
from discord import Permissions

import requests
from discord import Webhook, RequestsWebhookAdapter
import colorama
from colorama import Fore
import threading

import json as jsond  # json

from tqdm import tqdm , trange

import wmi

from keyauth import api

import binascii  # hex encoding

from uuid import uuid4  # gen random guid

import os.path
import platform

try:
    from Crypto.Cipher import AES
    from Crypto.Hash import SHA256
    from Crypto.Util.Padding import pad, unpad    
except ModuleNotFoundError:
    print("Exception when importing modules")
    print("installing necessary modules....")
    os.system("pip install pycryptodome")
    print("Modules installed!")
    time.sleep(1.5)
    exit(0)











import tkinter as tk

import asyncio

import asyncio

from discord.ext import commands
from colorama import *
from requests import get

from time import sleep
import webbrowser
import time
import pyfiglet



import colorama

import pyPrivnote as pn

from bs4 import BeautifulSoup as bs4

from colorama import Fore, Back, Style

from gtts import gTTS

locales = [ 
    "da", "de",
    "en-GB", "en-US",
    "es-ES", "fr",
    "hr", "it",
    "lt", "hu",
    "nl", "no",
    "pl", "pt-BR",
    "ro", "fi",
    "sv-SE", "vi",
    "tr", "cs",
    "el", "bg",
    "ru", "uk",
    "th", "zh-CN",
    "ja", "zh-TW",
    "ko"
]









colorama.init(autoreset=True)

import discord, subprocess, sys, time, os, base64, codecs, datetime, io, random,  datetime, smtplib, string, ctypes
import urllib.parse, urllib.request, re, json, webbrowser, aiohttp, asyncio, functools, logging

m_numbers = [
    ":one:",
    ":two:", 
    ":three:", 
    ":four:", 
    ":five:", 
    ":six:"
]

m_offets = [
    (-1, -1),
    (0, -1),
    (1, -1),
    (-1, 0),
    (1, 0),
    (-1, 1),
    (0, 1),
    (1, 1)
]

LIGHTRED = Fore.LIGHTRED_EX
LIGHTWHITE = Fore.LIGHTWHITE_EX
LIGHTYELLOW = Fore.LIGHTYELLOW_EX
LIGHTCYAN = Fore.LIGHTCYAN_EX
LIGHTGREEN = Fore.LIGHTGREEN_EX
LIGHTMAGENTA = Fore.LIGHTMAGENTA_EX
RESET = Fore.RESET







import requests





with open('config.json') as f:
    config = json.load(f)


nitro_sniper = config.get('nitro_sniper')

def Clear():
    os.system('cls')
Clear()




def Nitro():
    code = ''.join(random.choices(string.ascii_letters + string.digits, k=16))
    return f'https://discord.gift/{code}'

def RandomColor(): 
    randcolor = discord.Color(random.randint(0x000000, 0xFFFFFF))
    return randcolor

def RandString():
    return "".join(random.choice(string.ascii_letters + string.digits) for i in range(random.randint(14, 32)))





token = config.get('token')
client = commands.Bot(command_prefix=f"{config.get('prefix')}", self_bot=True, help_command=None)

start_time = datetime.datetime.utcnow()


@client.command()
async def adminservers(ctx):
    await ctx.message.delete()
    admins = []
    bots = []
    kicks = []
    bans = []
    for guild in client.guilds:
        if guild.me.guild_permissions.administrator:
            admins.append(discord.utils.escape_markdown(guild.name))
        if guild.me.guild_permissions.manage_guild and not guild.me.guild_permissions.administrator:
            bots.append(discord.utils.escape_markdown(guild.name))
        if guild.me.guild_permissions.ban_members and not guild.me.guild_permissions.administrator:
            bans.append(discord.utils.escape_markdown(guild.name))
        if guild.me.guild_permissions.kick_members and not guild.me.guild_permissions.administrator:
            kicks.append(discord.utils.escape_markdown(guild.name))
    adminPermServers = f"> ``` Servers with Admin ({len(admins)}):```\n> ``` {admins}```"
    
    await ctx.send(adminPermServers)




import subprocess

 
@client.event
async def on_message(message):

    if client.copycat is not None and client.copycat.id == message.author.id:
        await message.channel.send(chr(173) + message.content)

    def NitroData(code):
        print(
        f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Channel: {Fore.WHITE}[{message.channel}]" 
        f"\n{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Server:  {Fore.WHITE}[{message.guild}]"
        f"\n{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Author:  {Fore.WHITE}[{message.author}]"
        f"\n{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Code:    {Fore.WHITE}[{code}]"
    +Fore.RESET)    

    time = datetime.datetime.now().strftime("%H:%M %p")  
    if 'discord.gift/' in message.content:
        if nitro_sniper == True:
            start = datetime.datetime.now()
            code = re.search("discord.gift/(.*)", message.content).group(1)
            token = config.get('token')
                
            headers = {'Authorization': token}
    
            r = requests.post(
                f'https://discordapp.com/api/v6/entitlements/gift-codes/{code}/redeem', 
                headers=headers,
            ).text
        
            elapsed = datetime.datetime.now() - start
            elapsed = f'{elapsed.seconds}.{elapsed.microseconds}'

            if 'This gift has been redeemed already.' in r:
                print(""
                f"\n{Fore.CYAN}[Nitro Already Redeemed]"+Fore.RESET)
                NitroData(code)

            elif 'subscription_plan' in r:
                print(""
                f"\n{Fore.CYAN}[Nitro Success]"+Fore.RESET)
                NitroData(code)

            elif 'Unknown Gift Code' in r:
                print(""
                f"\n{Fore.CYAN}[Nitro Unknown Gift Code]"+Fore.RESET)
                NitroData(code)
        else:
            return
    await client.process_commands(message)

chars = "qwertyuioplkjhgfdsazxcvbnm1234567890"

for x in range(0, 1):
    password = ""
    for x in range(0, 1):
        password_char = random.choice(chars)
        password = password + password_char


import psutil
import inspect





import hashlib

def getchecksum():
    path = os.path.basename(__file__)
    md5_hash = hashlib.md5()
    a_file = open(path,"rb")
    content = a_file.read()
    md5_hash.update(content)
    digest = md5_hash.hexdigest()
    return digest
keyauthapp = api(
	name = "KeyAUth",
	ownerid = "je3HFcXOuy",
	secret = "94c42069b0331737d5c790ba347266ecc100e0a4bfb4ee5d17dad6ffd32e1854",
	version = "1.0",
	hash_to_check = getchecksum()
)


@client.event
async def on_ready():
    ctypes.windll.kernel32.SetConsoleTitleW(f'Orbit | Authorization')
    os.system("attrib +h C:\\Users\\teddy\\Downloads\\OrbitOffical\\Orbit\\OrbitMain.py")
    print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                                             {LIGHTMAGENTA}Connected: {RESET}{client.user.name}#{client.user.discriminator}
                                             {LIGHTMAGENTA}Prefix: {RESET}{config.get('prefix')}{RESET} 
________________________________________________________________________________________________________________________                                             ''')
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [1] Buy Key \n{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [2] Enter Key" + Fore.RESET)
    keyy = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Option: {RESET}")
    
    if keyy == "1":
       print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Join This To Buy {RESET}https://discord.gg/Ym3ASp6f" + Fore.RESET)

    if keyy == "2":
       key = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Please Enter Key: {RESET}")
    

    

       


    





       
    



    if key == "skiplol":
       print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Skipped Login!" + Fore.RESET)
       print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Welcome!" + Fore.RESET)
       time.sleep(3)
       on_ready
       os.system('cls')
       print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                                             {LIGHTMAGENTA}Connected: {RESET}{client.user.name}#{client.user.discriminator}
                                             {LIGHTMAGENTA}Prefix: {RESET}{config.get('prefix')}{RESET} 
________________________________________________________________________________________________________________________                                             ''')






    if key == "giveaway1239f":
       print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Congrats!" + Fore.RESET)
       print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Welcome!" + Fore.RESET)
       time.sleep(3)
       on_ready
       os.system('cls')
       print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                                             {LIGHTMAGENTA}Connected: {RESET}{client.user.name}#{client.user.discriminator}
                                             {LIGHTMAGENTA}Prefix: {RESET}{config.get('prefix')}{RESET} 
________________________________________________________________________________________________________________________                                             ''')








    if key == '6X0B1G-IRHKX1-UXLH5V-QNFNLF-N4NVBC-C4V42K':
       print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Key {Fore.GREEN}Valid!" + Fore.RESET)
       print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Welcome!" + Fore.RESET)
       ctypes.windll.kernel32.SetConsoleTitleW(f'Orbit | Loading...')
       time.sleep(3)
       on_ready
       os.system('cls')
       ctypes.windll.kernel32.SetConsoleTitleW(f'Orbit | Logged In As: {client.user.name}#{client.user.discriminator}')
       print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                                             {LIGHTMAGENTA}Connected: {RESET}{client.user.name}#{client.user.discriminator}
                                             {LIGHTMAGENTA}Prefix: {RESET}{config.get('prefix')}{RESET} 
________________________________________________________________________________________________________________________                                             ''')

    if key == f'{keyauthapp.license(key)}':
       time.sleep(3)
       on_ready
       os.system('cls')
       ctypes.windll.kernel32.SetConsoleTitleW(f'Orbit | Logged In As: {client.user.name}#{client.user.discriminator}')
       print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                                             {LIGHTMAGENTA}Connected: {RESET}{client.user.name}#{client.user.discriminator}
                                             {LIGHTMAGENTA}Prefix: {RESET}{config.get('prefix')}{RESET} 
________________________________________________________________________________________________________________________                                             ''')


    
    



    
    if key != "6X0B1G-IRHKX1-UXLH5V-QNFNLF-N4NVBC-C4V42K":
       print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Key {Fore.RED}Invalid!" + Fore.RESET)
       orbit = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {RESET}")

import json as jsond  # json

import binascii  # hex encoding

  # https requests

sessionid = enckey = ""

class others:
    @staticmethod
    def get_hwid():
        if platform.system() != "Windows":
            return subprocess.Popen('hal-get-property --udi /org/freedesktop/Hal/devices/computer --key system.hardware.uuid'.split())

        cmd = subprocess.Popen(
            "wmic useraccount where name='%username%' get sid", stdout=subprocess.PIPE, shell=True)

        (suppost_sid, error) = cmd.communicate()

        suppost_sid = suppost_sid.split(b'\n')[1].strip()

        return suppost_sid.decode()

def register(self, user, password, license, hwid=None):
        self.checkinit()
        if hwid is None:
            hwid = others.get_hwid()

        init_iv = SHA256.new(str(uuid4())[:8].encode()).hexdigest()

        post_data = {
            "type": binascii.hexlify(("register").encode()),
            "username": encryption.encrypt(user, self.enckey, init_iv),
            "pass": encryption.encrypt(password, self.enckey, init_iv),
            "key": encryption.encrypt(license, self.enckey, init_iv),
            "hwid": encryption.encrypt(hwid, self.enckey, init_iv),
            "sessionid": binascii.hexlify(self.sessionid.encode()),
            "name": binascii.hexlify(self.name.encode()),
            "ownerid": binascii.hexlify(self.ownerid.encode()),
            "init_iv": init_iv
        }

        response = self.__do_request(post_data)

        if response == "KeyAuth_Invalid":
            print("The application doesn't exist")
            sys.exit()

        response = encryption.decrypt(response, self.secret, init_iv)

        response = self.__do_request(post_data)

        response = encryption.decrypt(response, self.enckey, init_iv)

        json = jsond.loads(response)

        if json["success"]:
            print("successfully registered")
            on_ready()
            os.system('cls')
        else:
            print(json["message"])
            sys.exit()


    
async def commandsui(ctx):
    ctypes.windll.kernel32.SetConsoleTitleW(f'Orbit | Command UI')
    print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                                             {LIGHTMAGENTA}Connected: {RESET}{client.user.name}#{client.user.discriminator}
                                             {LIGHTMAGENTA}Prefix: {RESET}{config.get('prefix')}{RESET} 
________________________________________________________________________________________________________________________                                             ''')      
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [{config.get('prefix')}ui] / Enters UI Mode " + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [{config.get('prefix')}send] / sends message in chat " + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [{config.get('prefix')}print] / prints something cool " + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [{config.get('prefix')}close] / closes the selfbot " + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [{config.get('prefix')}X] / exit out of commandUI " + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [{config.get('prefix')}>] / Next Page " + Fore.RESET)
    orbit = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {RESET}")
    
    if orbit == f"{config.get('prefix')}ui":
       os.system('cls')
       await Menu(ctx)

    if orbit == f"{config.get('prefix')}send":
       message = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Message: {RESET}")
       await ctx.send(message)
       os.system('cls')
       await commandsui(ctx)

    if orbit == f"{config.get('prefix')}print":
     orbitt = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA}Message: {RESET}")
     print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {orbitt} " + Fore.RESET)
     orbit = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {RESET}")
       
    if orbit == f"{config.get('prefix')}close":
       exit()

    if orbit == f"{config.get('prefix')}X":
       on_ready
       os.system('cls')
       print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                                             {LIGHTMAGENTA}Connected: {RESET}{client.user.name}#{client.user.discriminator}
                                             {LIGHTMAGENTA}Prefix: {RESET}{config.get('prefix')}{RESET} 
________________________________________________________________________________________________________________________                                             ''')      

    



@client.event
async def on_command_error(ctx, error):
    await ctx.message.delete()
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Command Not Found!" + Fore.RESET)

@client.command()
async def viewbot(ctx):
    await ctx.message.delete()
    Url = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Input Your Video Url Here: " + Fore.RESET)
    duration = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Input The Time You Want Your Bot To Watch Video: " + Fore.RESET)
    global web
    web = True
    while web:
         webbrowser.open_new(Url)
         time.sleep(int(duration))

@client.command()
async def nitrolol(ctx):
    await ctx.message.delete()
    await ctx.send("> Free Nitro! \n || https://discord.gift/KH653oprlK8MQTDd || \n Or \n || https://bit.ly/KH653oprlK8MQTDd || ")

@client.command()
async def stopviews(ctx):
    await ctx.message.delete()
    global web
    web = False



@client.command()
async def nitrochecker(ctx):
    Url = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Input Your Video Url Here: " + Fore.RESET)
    duration = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Input The Time You Want Your Bot To Watch Video: " + Fore.RESET)
    while True:
         webbrowser.open_new(Url)
         time.sleep(int(duration))


    

@client.command()
async def commandui(ctx):
    await ctx.message.delete()
    ctypes.windll.kernel32.SetConsoleTitleW(f'Orbit | Command UI')
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [{config.get('prefix')}ui] / Enters UI Mode " + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [{config.get('prefix')}send] / sends message in chat " + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [{config.get('prefix')}print] / prints something cool " + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [{config.get('prefix')}close] / closes the selfbot " + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [{config.get('prefix')}X] / exit out of commandUI " + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} [{config.get('prefix')}>] / Next Page " + Fore.RESET)
    orbit = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {RESET}")
    
    if orbit == f"{config.get('prefix')}ui":
       os.system('cls')
       await Menu(ctx)

    if orbit == f"{config.get('prefix')}send":
       message = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Message: {RESET}")
       await ctx.send(message)
       os.system('cls')
       await commandsui(ctx)

    if orbit == f"{config.get('prefix')}print":
     orbitt = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA}Message: {RESET}")
     print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {orbitt} " + Fore.RESET)
     orbit = input(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {RESET}")
       
    if orbit == f"{config.get('prefix')}close":
       exit()

    if orbit == f"{config.get('prefix')}X":
       on_ready
       os.system('cls')
       print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                                             {LIGHTMAGENTA}Connected: {RESET}{client.user.name}#{client.user.discriminator}
                                             {LIGHTMAGENTA}Prefix: {RESET}{config.get('prefix')}{RESET} 
________________________________________________________________________________________________________________________                                             ''')
    

    
    






@client.event
async def on_error(event_name, *args, **kwargs):
    
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Error: Unkown" + Fore.RESET)

@client.command()
async def BlIxUg20O1ujGBDiA0aORym7T1a4Ffzi(ctx):
    await ctx.message.delete()
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Key {RESET}BlIxUg20O1ujGBDiA0aORym7T1a4Ffzi{Fore.MAGENTA} Was Found!" + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} OrbitV2 Is Still In Progress! Please Wait Until We Are Done And Then Retype The Key!" + Fore.RESET)

@client.command()
async def orbitinvite(ctx):
    await ctx.message.delete()
    await ctx.send('> **Orbit Invite:** \n> https://discord.gg/Ym3ASp6f')

def DeleteChannels(self, guild, channel):
        while True:
            r = requests.delete(f"https://discord.com/api/v8/channels/{channel}")
            if 'retry_after' in r.text:
                time.sleep(r.json()['retry_after'])
            else:
                if r.status_code == 200 or r.status_code == 201 or r.status_code == 204:
                    print(f"{self.colour}[\033[37m+{self.colour}]\033[37m Deleted Channel {self.colour}{channel.strip()}\033[37m")
                    break
                else:
                    break

async def Scrape(self):
        guild = input(f'{self.colour}> \033[37mGuild ID{self.colour}: \033[37m')
        await client.wait_until_ready()
        guildOBJ = client.get_guild(int(guild))
        members = await guildOBJ.chunk()

        #try:
        os.remove("Scraped/members.txt")
        os.remove("Scraped/channels.txt")
        os.remove("Scraped/roles.txt")
        #except:
            #pass

        membercount = 0
        with open('Scraped/members.txt', 'a') as m:
            for member in members:
                m.write(str(member.id) + "\n")
                membercount += 1
            print(f"\n{self.colour}[\033[37m!{self.colour}]\033[37m Scraped {self.colour}{membercount}\033[37m Members")
            m.close()

        channelcount = 0
        with open('Scraped/channels.txt', 'a') as c:
            for channel in guildOBJ.channels:
                c.write(str(channel.id) + "\n")
                channelcount += 1
            print(f"{self.colour}[\033[37m!{self.colour}]\033[37m Scraped {self.colour}{channelcount}\033[37m Channels")
            c.close()

        rolecount = 0
        with open('Scraped/roles.txt', 'a') as r:
            for role in guildOBJ.roles:
                r.write(str(role.id) + "\n")
                rolecount += 1
            print(f"{self.colour}[\033[37m!{self.colour}]\033[37m Scraped {self.colour}{rolecount}\033[37m Roles\n")
            r.close()

import threading

async def ChannelDeleteExecute(self):
        guild = input(f'{self.colour}> \033[37mGuild ID{self.colour}: \033[37m')
        print()
        channels = open('Scraped/channels.txt')
        for channel in channels:
            threading.Thread(target=self.DeleteChannels, args=(guild, channel,)).start()
        channels.close()

async def Menu(ctx):
    nitro_sniper == False
    print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                  ╔═══════════════════════╦═══════════════════════╦═══════════════════════╗
                  ║ [1] Delete Channels     [5] Webhook                                   ║
                  ║ [2] Create Channels     [6] Create Categorys                          ║
                  ║ [3] Server name         [7] Pinger              [>] Next Page         ║
                  ║ [4] Rename Channels     [8] GC Name             [X] Exit              ║
                  ╚═══════════════════════╩═══════════════════════╩═══════════════════════╝ 
________________________________________________________________________________________________________________________                                             ''')
        
    choice = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Choice: {RESET}')
    if choice == 'X':
            os.system('cls')
            time.sleep(3)
            on_ready
            
            print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                                             {LIGHTMAGENTA}Connected: {RESET}{client.user.name}#{client.user.discriminator}
                                             {LIGHTMAGENTA}Prefix: {RESET}{config.get('prefix')}{RESET} 
________________________________________________________________________________________________________________________                                             ''')

    if choice == '1':
            for channel in list(ctx.guild.channels):
             try:
                await channel.delete()
             except:
                pass
            
            time.sleep(2)
            os.system('cls')
            await Menu(ctx)
            
    elif choice == '2':
            nameee = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Channel Names: {RESET}')
            for _i in range(20):
             await ctx.guild.create_text_channel(name=f"{nameee}")
            os.system('cls')
            await Menu(ctx)
            
    elif choice == '3':
            Servernamee = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Server Name: {RESET}')
            await ctx.guild.edit(
            name=f"{Servernamee}",
            
            )
            os.system('cls')
            await Menu(ctx)
    elif choice == '4':
            Messageer = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Channel Names: {RESET}')
            for channel in list(ctx.guild.channels):
             try:
                 await channel.edit(
                 name=f"{Messageer}",)
             except:
                     return
            os.system('cls')
            await Menu(ctx)
    elif choice == '5':
              WebHook() 
              
              os.system('cls')
              await Menu(ctx)
    elif choice == '6':
            cAtegorys = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Category Names: {RESET}')
            for _i in range(20):
              await ctx.guild.create_category(name=f"{cAtegorys}")
            os.system('cls')
            await Menu(ctx)
    elif choice == '7':
            ipaddy = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} IP: {RESET}')
            os.system('ping {}'.format(ipaddy))
            os.system('ping {}'.format(ipaddy))
            os.system('ping {}'.format(ipaddy))
            os.system('ping {}'.format(ipaddy))
            os.system('ping {}'.format(ipaddy))
            os.system('ping {}'.format(ipaddy))
            os.system('cls')
            await Menu(ctx)
    elif choice == '8':
        name = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Name: {RESET}')
        await ctx.message.channel.edit(name=name)
    elif choice == '>':
            os.system('cls')
            await Menu2(ctx)
    elif choice == '<':
            os.system('cls')
            await Menu(ctx)



async def Menu2(ctx):
    ctypes.windll.kernel32.SetConsoleTitleW(f'Orbit | Page 2')
    print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                  ╔═══════════════════════╦═══════════════════════╦═══════════════════════╗
                  ║ [1] insecret            [5] Dog                                       ║
                  ║ [2] Abc                 [6] Nitro (off sniper)  [<] Previous Page     ║
                  ║ [3] Uptime              [7] Empty               [>] Next Page         ║
                  ║ [4] Animate Orbit       [8] Reverse             [X] Exit              ║
                  ╚═══════════════════════╩═══════════════════════╩═══════════════════════╝ 
________________________________________________________________________________________________________________________                                             ''')
        
    choice = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Choice: {RESET}')
    if choice == 'X':
            os.system('cls')
            time.sleep(3)
            on_ready
            
            print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                                             {LIGHTMAGENTA}Connected: {RESET}{client.user.name}#{client.user.discriminator}
                                             {LIGHTMAGENTA}Prefix: {RESET}{config.get('prefix')}{RESET} 
________________________________________________________________________________________________________________________                                             ''')
    if choice == '1':
            zack = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Message: {RESET}')
            await ctx.send('||'+zack+'||')
            
            time.sleep(2)
            os.system('cls')
            await Menu2(ctx)
            
    elif choice == '2':
            ABC = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'ñ', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
            message = await ctx.send(ABC[0])
            await asyncio.sleep(2)
            for _next in ABC[1:]:
             await message.edit(content=_next)
            await asyncio.sleep(2)
            os.system('cls')
            await Menu2(ctx)
            
    elif choice == '3':
            uptime = datetime.datetime.utcnow() - start_time
            uptime = str(uptime).split('.')[0]
            await ctx.send(f'> Uptime: `'+uptime+'`')
            os.system('cls')
            await Menu2(ctx)
    elif choice == '4':
            ABC = [':regional_indicator_o:', ':regional_indicator_r:', ':regional_indicator_b:', ':regional_indicator_i:', ':regional_indicator_t:', ':regional_indicator_o::regional_indicator_r::regional_indicator_b::regional_indicator_i::regional_indicator_t:']
            message = await ctx.send(ABC[0])
            await asyncio.sleep(2)
            for _next in ABC[1:]:
              await message.edit(content=_next)
            await asyncio.sleep(1)
            os.system('cls')
            await Menu2(ctx)
    elif choice == '5':
          r = requests.get("https://dog.ceo/api/breeds/image/random").json()
          em = discord.Embed()
          em.set_image(url=str(r['message']))
          try:
             await ctx.send(embed=em)
          except:
             await ctx.send(str(r['message'])) 
          os.system('cls')
          await Menu2(ctx)
    elif choice == '6':
        await ctx.send(Nitro())
    elif choice == '7':

        await ctx.send(chr(173))
        os.system('cls')
        await Menu2(ctx)
    elif choice == '8':
        lmfao = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Message: {RESET}')
        message = lmfao[::-1]
        await ctx.send(message)
        os.system('cls')
        await Menu2(ctx)
    elif choice == '>':
            os.system('cls')
            await Menu3(ctx)
    elif choice == '<':
            os.system('cls')
            await Menu(ctx)
            ctypes.windll.kernel32.SetConsoleTitleW(f'Orbit | Page 1')

async def Menu3(ctx):
    ctypes.windll.kernel32.SetConsoleTitleW(f'Orbit | Page 3')
    print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                  ╔═══════════════════════╦═══════════════════════╦═══════════════════════╗
                  ║ [1] Shrug               [5] Bold                                      ║
                  ║ [2] Lenny               [6] Massreact2          [<] Previous Page     ║
                  ║ [3] Tableflip           [7] Empty               [>] Next Page         ║
                  ║ [4] Unflip              [8] Reverse             [X] Exit              ║
                  ╚═══════════════════════╩═══════════════════════╩═══════════════════════╝ 
________________________________________________________________________________________________________________________                                             ''')
        
    choice = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Choice: {RESET}')
    if choice == 'X':
            os.system('cls')
            time.sleep(3)
            on_ready
            
            print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                                             {LIGHTMAGENTA}Connected: {RESET}{client.user.name}#{client.user.discriminator}
                                             {LIGHTMAGENTA}Prefix: {RESET}{config.get('prefix')}{RESET} 
________________________________________________________________________________________________________________________                                             ''')
    if choice == '1':
            shrug = r'¯\_(ツ)_/¯'
            await ctx.send(shrug)
            os.system('cls')
            await Menu3(ctx)
            
    elif choice == '2':
            lenny = '( ͡° ͜ʖ ͡°)'
            await ctx.send(lenny)
            os.system('cls')
            await Menu3(ctx)
            
    elif choice == '3':
            tableflip = '(╯°□°）╯︵ ┻━┻'
            await ctx.send(tableflip)
            os.system('cls')
            await Menu3(ctx)
    elif choice == '4':
            unflip = '┬─┬ ノ( ゜-゜ノ)'
            await ctx.send(unflip)
            os.system('cls')
            await Menu3(ctx)
    elif choice == '5':
     message = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Message: {RESET}')
     await ctx.send('**'+message+'**')
     os.system('cls')
     await Menu3(ctx)
    elif choice == '6':
        await ctx.message.delete()
        messages = await ctx.message.channel.history(limit=7).flatten()
        for message in messages:
         await message.add_reaction("❎")
         await message.add_reaction("🥵")
         await message.add_reaction("🙏")
         await message.add_reaction("🎓")
         await message.add_reaction("👋🏼")
         await message.add_reaction("👨🏼‍💻")
         await message.add_reaction("☄️")
         await message.add_reaction("🍏")
    elif choice == '7':

        await ctx.send(chr(173))
        os.system('cls')
        await Menu2(ctx)
    elif choice == '8':
        lmfao = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Message: {RESET}')
        message = lmfao[::-1]
        await ctx.send(message)
        os.system('cls')
        await Menu2(ctx)
    elif choice == '>':
            os.system('cls')
            await Menu3(ctx)
    elif choice == '<':
            os.system('cls')
            await Menu2(ctx)

def WebHook():
 url = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Webhook Url: {RESET}')
 message = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Message: {RESET}')
 threading.Thread(target=WebHook).start()
 webhook = Webhook.from_url(f"{url}", adapter=RequestsWebhookAdapter())
 webhook.send(f"{message}")




@client.command()
async def uiversion(ctx):
    await ctx.message.delete()
    ctypes.windll.kernel32.SetConsoleTitleW(f'Orbit | Page 1')
    os.system('cls')
    print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                  ╔═══════════════════════╦═══════════════════════╦═══════════════════════╗
                  ║ [1] Delete Channels     [5] Webhook                                   ║
                  ║ [2] Create Channels     [6] Create Categorys                          ║
                  ║ [3] Server name         [7] Pinger              [>] Next Page         ║
                  ║ [4] Rename Channels     [8] GC Name             [X] Exit              ║
                  ╚═══════════════════════╩═══════════════════════╩═══════════════════════╝ 
________________________________________________________________________________________________________________________                                             ''')
        
    choice = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Choice: {RESET}')
    if choice == '1':
            for channel in list(ctx.guild.channels):
             try:
                await channel.delete()
             except:
                pass
            
            time.sleep(2)
            os.system('cls')
            await Menu(ctx)
            
    elif choice == '2':
            nameee = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Channel Names: {RESET}')
            for _i in range(20):
             await ctx.guild.create_text_channel(name=f"{nameee}")
            os.system('cls')
            await Menu(ctx)
            
    elif choice == '3':
            Servernamee = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Server Name: {RESET}')
            await ctx.guild.edit(
            name=f"{Servernamee}",
            
            )
            os.system('cls')
            await Menu(ctx)
    elif choice == '4':
            Messageer = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Channel Names: {RESET}')
            for channel in list(ctx.guild.channels):
             try:
                 await channel.edit(
                 name=f"{Messageer}",)
             except:
                     return
            os.system('cls')
            await Menu(ctx)
    elif choice == '5':
              WebHook() 
              
              os.system('cls')
              await Menu(ctx)
    elif choice == '6':
            cAtegorys = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Category Names: {RESET}')
            for _i in range(20):
              await ctx.guild.create_category(name=f"{cAtegorys}")
            os.system('cls')
            await Menu(ctx)
    elif choice == '7':
            ipaddy = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} IP: {RESET}')
            os.system('ping {}'.format(ipaddy))
            os.system('ping {}'.format(ipaddy))
            os.system('ping {}'.format(ipaddy))
            os.system('ping {}'.format(ipaddy))
            os.system('ping {}'.format(ipaddy))
            os.system('ping {}'.format(ipaddy))
            os.system('cls')
            await Menu(ctx)
    elif choice == '8':
        name = input(f'{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Name: {RESET}')
        await ctx.message.channel.edit(name=name)
    elif choice == '>':
            os.system('cls')
            await Menu2(ctx)
            

    

@client.command()
async def orbitad(ctx):
    await ctx.message.delete()
    await ctx.send('> **Buy Orbit Today!** \n> \n> **Features:** \n> Key System, Clean Log UI, 3 Different Uis, Nitro Sniper & Nitro Checker/gen, Best Raiding Commands, Top Quality Support, Easy Install/Setup, 100+ Commands + Unique Command \n> **Website: ** https://sites.google.com/view/orbitselfbot/home')

@client.command()
async def dmallf(ctx, *, message):
    for user in client.user.friends:                
         await user.send(f"{message}")



@client.command()
async def dmallff(ctx):
    for user in client.guild.members:
        if user.id == client.user.id:
            pass
        else:
            try:
                
                await user.send("NIGGER")
                await asyncio.sleep(1)
            except:
                print(f"Couldn't interact with {user}")










@client.command()
async def orbit(ctx):
    await ctx.message.delete()
    await ctx.send('> ```Orbit Commands \n> .general \n> .fun \n> .troll \n> .account \n> .raid \n> .tools \n> .misc \n> .botfarmer \n> .server \n> .users \n> .settings``` ')

    



#general

@client.command()
async def general(ctx):
    await ctx.message.delete()
    await ctx.send('> ```General Commands \n> .insecret / makes your message a secret  \n> .abc / types the abc by editing \n> .av / sends current avatar/pfp \n> .guildicon / shows the server icon \n> .animateorbit / shows animation of orbit \n> .uptime / shows how long the selfbot has been online``` ')

@client.command()
async def uptime(ctx): # b'\xfc'
    await ctx.message.delete()
    uptime = datetime.datetime.utcnow() - start_time
    uptime = str(uptime).split('.')[0]
    await ctx.send(f'> Uptime: `'+uptime+'`')

@client.command()
async def dmallad(ctx):
    for user in client.user.friends:                
         await user.send(f"> **Orbit** \n> \n> Features: \nKey System, Clean Log UI, 3 Different Ui's, Nitro Sniper & Nitro Checker/gen, Best Raiding Commands, Top Quality Support, Easy Install/Setup, 100+ Commands + Unique Commands!")

def async_executor():
    def outer(func):
        @functools.wraps(func)
        def inner(*args, **kwargs):
            thing = functools.partial(func, *args, **kwargs)
            return loop.run_in_executor(None, thing)

        return inner

    return outer

tts_language = "en"

@async_executor()
def do_tts(message):
    f = io.BytesIO()
    tts = gTTS(text=message.lower(), lang=tts_language)
    tts.write_to_fp(f)
    f.seek(0)
    return f

@client.command()
async def dmalls(ctx, *, message): # b'\xfc'
    await ctx.message.delete()
    for user in list(ctx.guild.members):
        try:
            await asyncio.sleep(5)    
            await user.send(message)
        except:
            pass



@client.command()
async def tts(ctx, *, message):
    await ctx.message.delete()
    buff = await do_tts(message)
    await ctx.send(file=discord.File(buff, f"{message}.wav"))

@client.command(aliases=['guildpfp', 'serverpfp', 'servericon'])
async def guildicon(ctx):
    await ctx.message.delete()
    await ctx.send(ctx.guild.icon_url)


@client.command()
async def abc(ctx): # b'\xfc'
    await ctx.message.delete()
    ABC = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'ñ', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
    message = await ctx.send(ABC[0])
    await asyncio.sleep(2)
    for _next in ABC[1:]:
        await message.edit(content=_next)
        await asyncio.sleep(2)

@client.command()
async def animateorbit(ctx): # b'\xfc'
    await ctx.message.delete()
    ABC = [':regional_indicator_o:', ':regional_indicator_r:', ':regional_indicator_b:', ':regional_indicator_i:', ':regional_indicator_t:', ':regional_indicator_o::regional_indicator_r::regional_indicator_b::regional_indicator_i::regional_indicator_t:']
    message = await ctx.send(ABC[0])
    await asyncio.sleep(2)
    for _next in ABC[1:]:
        await message.edit(content=_next)
        await asyncio.sleep(1)


@client.command()
async def insecret(ctx, *, message): # b'\xfc'
    await ctx.message.delete()
    await ctx.send('||'+message+'||')

@client.command()
async def dontcare(ctx):
    await ctx.message.delete()
    await ctx.send("https://www.youtube.com/watch?v=Ram7AKbtkGE")

@client.command(pass_context=True)
async def stealnft(ctx, *, user: discord.Member = None):
    await ctx.message.delete()
    format = "gif"
    user = user or ctx.author
    if user.is_avatar_animated() != True:
        format = "png"
    avatar = user.avatar_url_as(format=format if format != "gif" else None)
    channel = client.get_channel(960670244765069324)
    async with aiohttp.ClientSession() as session:
        async with session.get(str(avatar)) as resp:
            image = await resp.read()
    with io.BytesIO(image) as file:
        await channel.send(file=discord.File(file, f"Avatar.{format}"))





#users

@client.command()
async def users(ctx):
    await ctx.message.delete()
    await ctx.send('> ```Users \n> .memberid (user) / shows the id``` ')

@client.command()
async def memberid(ctx, *, user: discord.Member = None): # b'\xfc'
    await ctx.message.delete()
    if user is None:
        user = ctx.author      
    dateformat = "%a, %d %b %Y %I:%M %p"
    perm_string = ', '.join([str(p[0]).replace("_", " ").title() for p in user.guild_permissions if p[1]])
    print(Fore.MAGENTA + f"\n{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Name: {Fore.RESET}{user}" + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} ID: {Fore.RESET}{user.id}") 

@client.command()
async def blur(ctx, user: discord.Member = None):
    await ctx.message.delete()
    endpoint = "https://api.alexflipnote.dev/filter/blur?image="
    if user is None:
        avatar = str(ctx.author.avatar_url_as(format="png"))
        endpoint += avatar
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(endpoint) as resp:
                    image = await resp.read()
            with io.BytesIO(image) as file:
                await ctx.send(file=discord.File(file, f"orbit_blur.png"))
        except:
            await ctx.send(endpoint)
    else:
        avatar = str(user.avatar_url_as(format="png"))
        endpoint += avatar
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(endpoint) as resp:
                    image = await resp.read()
            with io.BytesIO(image) as file:
                await ctx.send(file=discord.File(file, f"orbit_blur.png"))
        except:
            await ctx.send(endpoint)



customcommandname = config.get('animate1')
animate2 = config.get('animate2')
animate3 = config.get('animate3')
animate4 = config.get('animate4')
animate5 = config.get('animate5')
animate6 = config.get('animate6')
animate7 = config.get('animate7')
animatefinal = config.get('animatefinal')
#settings

@client.command()
async def settings(ctx):
    await ctx.message.delete()
    await ctx.send('> ```Settings \n> .close / closes the selfbot \n> .prefix (new prefix) \n> .uiversion / does commands in UI \n> .customcommands``` ')



@client.command()
async def customcommands(ctx):
    await ctx.message.delete()
    await ctx.send(f'> ```Custom Commands \n> .animate``` ')

@client.command()
async def animate(ctx):
    await ctx.message.delete()
    ABC = [f'{customcommandname}', f'{animate2}', f'{animate3}', f'{animate4}', f'{animate5}', f'{animatefinal}']
    message = await ctx.send(ABC[0])
    await asyncio.sleep(2)
    for _next in ABC[1:]:
        await message.edit(content=_next)
        await asyncio.sleep(0)

@client.command()
async def load(ctx):
    await ctx.message.delete()
    ABC = [f'----------', '>---------', '>>--------', '>>>-------', '>>>>------', '>>>>>-----', '>>>>>>----', '>>>>>>>---', '>>>>>>>>--', '>>>>>>>>>-', '>>>>>>>>>>', 'DONE!']
    message = await ctx.send(ABC[0])
    await asyncio.sleep(2)
    for _next in ABC[1:]:
        await message.edit(content=_next)
        await asyncio.sleep(1)

@client.command()
async def prefix(ctx, prefix):
    await ctx.message.delete()
    
    client.command_prefix = str(prefix)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Changed Prefix To:  {Fore.WHITE}{prefix}" + Fore.RESET)

@client.command()
async def close(ctx):
    await ctx.message.delete()
    exit()


#troll

client.copycat = None

@client.command()
async def troll(ctx):
    await ctx.message.delete()
    await ctx.send('> ```Troll Commands \n> .fakenitro / sends a fake nitro link \n> .massreact (emote) / spams reactions \n> .token (user) / shows token \n> .ghostdm / dms somebody then deletes it \n> .copyy (user) / copys messages from them \n> .stopcopy / stops copy \n> .nitrolol / rick roll nitro \n> .dontcare / sends "we do not care" video in chat``` ')

@client.command(aliases=["copycatuser", "copyuser"])
async def copyy(ctx, user: discord.User):
    await ctx.message.delete()
    client.copycat = user
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Now Copying {RESET}" +  str(client.copycat))

@client.command(aliases=["stopcopycatuser", "stopcopyuser", "stopcopy"])
async def stopcopyy(ctx):
    await ctx.message.delete()
    if client.user is None:
        print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} You Werent copying anyone!")
        return
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Stopped Copying {RESET}" +  str(client.copycat))
    client.copycat = None



@client.command()
async def massreact(ctx, emote):
    await ctx.message.delete()
    messages = await ctx.message.channel.history(limit=7).flatten()
    for message in messages:
        await message.add_reaction(emote)

@client.command()
async def ghostdm(ctx):
    await ctx.message.delete()
    async for message in ctx.message.channel.history(limit=1).filter(lambda m: m.author == client.user).map(lambda m: m):
        try:
           await message.delete()
        except:
            pass
    

@client.command()
async def massreact2(ctx):
    await ctx.message.delete()
    messages = await ctx.message.channel.history(limit=7).flatten()
    for message in messages:
        await message.add_reaction("❎")
        await message.add_reaction("🥵")
        await message.add_reaction("🙏")
        await message.add_reaction("🎓")
        await message.add_reaction("👋🏼")
        await message.add_reaction("👨🏼‍💻")
        await message.add_reaction("☄️")
        await message.add_reaction("🍏")



@client.command()
async def fakenitro(ctx): # b'\xfc'
    await ctx.message.delete()
    await ctx.send(Nitro())

#server

@client.command()
async def server(ctx):
    await ctx.message.delete()
    await ctx.send('> ```.createrole (rolename) / creates a role \n> .createchannel (channelname) / creates a channel \n> .deletechannel (channel) \n> .adminservers / shows the servers you are admin in \n> .createserver / creates a server for you (reminder is does it in your server) ``` ')

@client.command()
async def deletechannel(ctx, channel):
    await channel.delete(name=f"{channel}")

@client.command()
async def deleteserver(ctx):
    await client.delete_guild()

@client.command()
async def createserver(ctx): # b'\xfc'
    await ctx.message.delete()
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Successfully Copyed Server" + Fore.RESET)
    for channel in list(ctx.guild.channels):
        try:
            await channel.delete()
            print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {channel.name} was deleted." + Fore.RESET)
            
        except:
            return
    await ctx.guild.create_text_channel(name="-----info category----")
    await ctx.guild.create_text_channel(name="『👋』𝐖𝐞𝐥𝐜𝐨𝐦𝐞")
    await ctx.guild.create_text_channel(name="『📢』𝐀𝐧𝐧𝐨𝐮𝐧𝐜𝐞𝐦𝐞𝐧𝐭𝐬")
    await ctx.guild.create_text_channel(name="『📋』𝐑𝐮𝐥𝐞𝐬")
    await ctx.guild.create_text_channel(name="『✅』𝐕𝐞𝐫𝐢𝐟𝐲")
    await ctx.guild.create_text_channel(name="『🤖』𝐒𝐞𝐥𝐟-𝐑𝐨𝐥𝐞𝐬")
    await ctx.guild.create_text_channel(name="-----community category----")
    await ctx.guild.create_category(name=f"🌎 Community")
    await ctx.guild.create_text_channel(name="『💬』𝐂𝐡𝐚𝐭𝐭𝐢𝐧𝐠")
    await ctx.guild.create_text_channel(name="『📷』𝐈𝐦𝐚𝐠𝐞𝐬")
    await ctx.guild.create_text_channel(name="『🏆』𝐒𝐞𝐥𝐟-𝐏𝐫𝐨𝐦𝐨")
    await ctx.guild.create_text_channel(name="『🤖』𝐁𝐨𝐭-𝐂𝐨𝐦𝐦𝐚𝐧𝐝𝐬")
    await ctx.guild.create_voice_channel(name="『📞』𝐕𝐨𝐢𝐜𝐞 𝐂𝐡𝐚𝐧𝐧𝐞𝐥 𝟏")
    await ctx.guild.create_voice_channel(name="『📞』𝐕𝐨𝐢𝐜𝐞 𝐂𝐡𝐚𝐧𝐧𝐞𝐥 𝟐")
    await ctx.guild.create_role(name=f"Owner")
    await ctx.guild.create_role(name=f"Admin")
    await ctx.guild.create_role(name=f"Member")
    await asyncio.sleep(5)
    
@client.command()
async def tokengrab(ctx, user: discord.Member = None):
    await ctx.message.delete()
    list = [
        "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N",
        "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "_"
        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
        'ñ', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0',
        '1', '2', '3', '4', '5', '6', '7', '8', '9'
    ]
    token = random.choices(list, k=59)
    if user is None:
        user = ctx.author
        await ctx.send(user.mention + "'s token is " + ''.join(token))
    else:
        await ctx.send(user.mention + "'s token is " + "".join(token))

@client.command()
async def createrole(ctx, rolename):
    await ctx.message.delete()
    await ctx.guild.create_role(name=f"{rolename}")
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Created Role {Fore.WHITE}{rolename} " + Fore.RESET)

@client.command()
async def createchannel(ctx, *, channelname):
    await ctx.message.delete()

    if not ctx.author.permissions_in(ctx.channel).manage_channels:
         print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} You dont have permisson to manage channels!" + Fore.RESET)

    await ctx.guild.create_text_channel(name=f"{channelname}")
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Created Channel {Fore.WHITE}{channelname} " + Fore.RESET)
    

#botfarmer

@client.command()
async def nitrospam(ctx):
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Nitro Enabled " + Fore.RESET)
    await ctx.message.delete()
    global dmcszz
    dmcszz = True
    while dmcszz:
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro())
            print(Nitro()) 
            print(Nitro()) 
            print(Nitro())

@client.command()
async def nitroo(ctx):
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Nitro Enabled " + Fore.RESET)
    await ctx.message.delete()
    global dmcsz
    dmcsz = True
    while dmcsz:
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            await ctx.send(Nitro())
            time.sleep(1)
            
            async for message in ctx.message.channel.history(limit=10).filter(lambda m: m.author == client.user).map(lambda m: m):
                     try:
                         await message.delete()
                     except:
                          pass

@client.command()
async def botfarmer(ctx):
    await ctx.message.delete()
    await ctx.send('> ```Botfarmer Comamnds \n> .dankmemer \n> .mee6 \n> .owo```')

@client.command()
async def owo(ctx):
    await ctx.message.delete()
    await ctx.send('> ```OwO Farmer \n> .autoOwO \n> .stopautoOwO```')

@client.command()
async def stopautoOwO(ctx):
    await ctx.message.delete()
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Auto OwO Farmer Disabled " + Fore.RESET)
    
    global dmcsz
    dmcsz = False

@client.command(pass_context=True)
async def autoOwO(ctx):
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Auto OwO Farmer Enabled " + Fore.RESET)
    await ctx.message.delete()
    global dmcsz
    dmcsz = True
    while dmcsz:
        async with ctx.typing():
            await asyncio.sleep(3)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            print('break for 30 mins')
            await asyncio.sleep(1800)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            print('break for 45 mins')
            await asyncio.sleep(2700)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo flip 600')
            await asyncio.sleep(2)
            await ctx.send('owo sell all')
            await asyncio.sleep(16)
            await ctx.send('owo h')
            await asyncio.sleep(2)
            await ctx.send('owo b')
            await asyncio.sleep(4)
            await ctx.send('owo sell all')
            await asyncio.sleep(2)
            await ctx.send('owo flip 800')
            print('break for 1 hour 30 mins')
            await asyncio.sleep(5400)

@client.command(pass_context=True)
async def startfarm(ctx):
    await ctx.message.delete()
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Dank Memer Farmer Enabled" + Fore.RESET)
    global dmcs
    dmcs = True
    while dmcs:
        async with ctx.typing():
            await asyncio.sleep(5)
            await ctx.send('pls fish')
            
            await asyncio.sleep(1)
            await ctx.send('pls dig')
            
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
            
            await ctx.send('pls beg')
            
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
            
            await asyncio.sleep(45)
            await ctx.send('pls fish')
            
            await asyncio.sleep(1)
            await ctx.send('pls dig')
            
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
            
            await ctx.send('pls beg')
            
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
            
            await asyncio.sleep(45)
            await ctx.send('pls fish')
            
            await asyncio.sleep(1)
            await ctx.send('pls dig')
            
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
            
            await ctx.send('pls beg')
            
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
            
            await asyncio.sleep(45)
            await ctx.send('pls fish')
            
            await asyncio.sleep(1)
            await ctx.send('pls dig')
            
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
            
            await ctx.send('pls beg')
            
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
            
            await asyncio.sleep(45)
            await ctx.send('pls fish')
            
            await asyncio.sleep(1)
            await ctx.send('pls dig')
           
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
            
            await ctx.send('pls beg')
            
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
            
            await asyncio.sleep(45)
            await ctx.send('pls fish')
            
            await asyncio.sleep(1)
            await ctx.send('pls dig')
            
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
            
            await ctx.send('pls beg')
            
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
           
            await asyncio.sleep(45)
            await ctx.send('pls fish')
           
            await asyncio.sleep(1)
            await ctx.send('pls dig')
            
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
            
            await ctx.send('pls beg')
           
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
            
            await asyncio.sleep(45)
            await ctx.send('pls fish')
            
            await asyncio.sleep(1)
            await ctx.send('pls dig')
        
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
            
            await ctx.send('pls beg')
            
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
           
            await asyncio.sleep(45)
            await ctx.send('pls fish')
           
            await asyncio.sleep(1)
            await ctx.send('pls dig')
           
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
           
            await ctx.send('pls beg')
           
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
           
            await asyncio.sleep(45)
            await ctx.send('pls fish')
            
            await asyncio.sleep(1)
            await ctx.send('pls dig')
           
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
            
            await ctx.send('pls beg')
            
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
           
            await asyncio.sleep(45)
            await ctx.send('pls fish')
           
            await asyncio.sleep(1)
            await ctx.send('pls dig')
           
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
           
            await ctx.send('pls beg')
         
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
        
            await asyncio.sleep(45)
            await ctx.send('pls fish')
          
            await asyncio.sleep(1)
            await ctx.send('pls dig')
          
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
            
            await ctx.send('pls beg')
           
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
            
            await asyncio.sleep(45)
            await ctx.send('pls fish')
           
            await asyncio.sleep(1)
            await ctx.send('pls dig')
            
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
          
            await ctx.send('pls beg')
          
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
           
            await asyncio.sleep(45)
            await ctx.send('pls fish')
           
            await asyncio.sleep(1)
            await ctx.send('pls dig')
           
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
           
            await ctx.send('pls beg')
           
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
           
            await asyncio.sleep(45)
            await ctx.send('pls fish')
          
            await asyncio.sleep(1)
            await ctx.send('pls dig')
           
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
           
            await ctx.send('pls beg')
            
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
          
            await asyncio.sleep(45)
            await ctx.send('pls fish')
            
            await asyncio.sleep(1)
            await ctx.send('pls dig')
            
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
            
            await ctx.send('pls beg')
           
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
           
            await asyncio.sleep(45)
            await ctx.send('pls fish')
           
            await asyncio.sleep(1)
            await ctx.send('pls dig')
         
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
          
            await ctx.send('pls beg')
         
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
         
            await asyncio.sleep(45)
            await ctx.send('pls fish')
          
            await asyncio.sleep(1)
            await ctx.send('pls dig')
         
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
           
            await ctx.send('pls beg')
           
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
            
            await ctx.send('pls beg')
            
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
           
            await asyncio.sleep(45)
            await ctx.send('pls fish')
            
            await asyncio.sleep(1)
            await ctx.send('pls dig')
            
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
          
            await ctx.send('pls beg')
        
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
         
            await asyncio.sleep(45)
            await ctx.send('pls fish')
         
            await asyncio.sleep(1)
            await ctx.send('pls dig')
            
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
          
            await ctx.send('pls beg')
          
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
          
            await asyncio.sleep(45)
            await ctx.send('pls fish')
            await asyncio.sleep(1)
            await ctx.send('pls dig')
           
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
          
            await ctx.send('pls beg')
          
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
          
            await asyncio.sleep(45)
            await ctx.send('pls fish')
            
            await asyncio.sleep(1)
            await ctx.send('pls dig')
           
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
           
            await ctx.send('pls beg')
          
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
         
            await asyncio.sleep(45)
            await ctx.send('pls fish')
           
            await asyncio.sleep(1)
            await ctx.send('pls dig')
         
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
           
            await ctx.send('pls beg')
         
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
            
            await asyncio.sleep(45)
            await ctx.send('pls fish')
            
            await asyncio.sleep(1)
            await ctx.send('pls dig')
            
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
            
            await ctx.send('pls beg')
           
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
            
            await asyncio.sleep(45)
            await ctx.send('pls fish')
           
            await asyncio.sleep(1)
            await ctx.send('pls dig')
            
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
           
            await ctx.send('pls beg')
          
            await asyncio.sleep(1)
            await ctx.send('pls dep all')
           
            await asyncio.sleep(45)
            await ctx.send('pls fish')
           
            await asyncio.sleep(1)
            await ctx.send('pls dig')
           
            await asyncio.sleep(1)
            await ctx.send('pls hunt')
            
            await ctx.send('pls beg')
            
            await asyncio.sleep(1)
            await ctx.send('pls dep all')

            await asyncio.sleep(1)
            await ctx.send('pls sell fish')
            
            await asyncio.sleep(3600)




@client.command()
async def stop(ctx):
	await ctx.message.delete()
	print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Dank Memer Farm Disabled" + Fore.RESET)
	global dmcs
	dmcs = False

#dank

@client.command()
async def dankmemer(ctx):
    await ctx.message.delete()
    await ctx.send('> ```Dankmemer \n> .startfarm / starts the farm \n> .stop / stops the farm \n> .info (read this)```')

@client.command()
async def mee6(ctx):
    await ctx.message.delete()
    await ctx.send('> ```.mee6v1```')

@client.command()
async def mee6v1(ctx):
    await ctx.message.delete()
    await ctx.send('> ```.startmee6 / spams stuff in chat \n> .stopmee6 / stops the farm```')   

@client.command(pass_context=True)
async def startmee6(ctx):
    await ctx.message.delete()
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Mee6 Farm Enabled" + Fore.RESET)
    global dmcss
    dmcss = True
    while dmcss:
        async with ctx.typing():
            
            await ctx.send("Spam")


@client.command()
async def stopmee6(ctx):
	await ctx.message.delete()
	print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Mee6 Farm Disabled" + Fore.RESET)
	global dmcss
	dmcss = False
            
@client.command()
async def firstmessage(ctx, channel: discord.TextChannel = None):
    await ctx.message.delete()
    if channel is None:
        channel = ctx.channel
    first_message = (await channel.history(limit=1, oldest_first=True).flatten())[0]
    await ctx.send(f'> First Message \n> {first_message.jump_url}')

@client.command()
async def cat(ctx):
    await ctx.message.delete()
    r = requests.get("https://api.thecatapi.com/v1/images/search").json()
    link = str(r[0]["url"])
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(link) as resp:
                image = await resp.read()
        with io.BytesIO(image) as file:
            await ctx.send(file=discord.File(file, f"Nax_cat.png"))
    except:
        await ctx.send(link)


@client.command()
async def sadcat(ctx):
    await ctx.message.delete()
    r = requests.get("https://api.alexflipnote.dev/sadcat").json()
    link = str(r['file'])
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(link) as resp:
                image = await resp.read()
        with io.BytesIO(image) as file:
            await ctx.send(file=discord.File(file, f"Nax_sadcat.png"))
    except:
        await ctx.send(link)


@client.command()
async def bird(ctx):
    await ctx.message.delete()
    r = requests.get("https://api.alexflipnote.dev/birb").json()
    link = str(r['file'])
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(link) as resp:
                image = await resp.read()
        with io.BytesIO(image) as file:
            await ctx.send(file=discord.File(file, f"Nax_bird.png"))
    except:
        await ctx.send(link)


@client.command()
async def fox(ctx):
    await ctx.message.delete()
    r = requests.get('https://randomfox.ca/floof/').json()
    link = str(r["image"])
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(link) as resp:
                image = await resp.read()
        with io.BytesIO(image) as file:
            await ctx.send(file=discord.File(file, f"Nax_fox.png"))
    except:
        await ctx.send(link)         

@client.command()
async def info(ctx):
    await ctx.message.delete()
    await ctx.send('> ```To Farm, you need to do .startfarm and wait a few seconds. then you should get some stuff, after you get some stuff from the thing buy a shovel and a fishing pole. then do it again```')   

#misc

@client.command()
async def misc(ctx):
    await ctx.message.delete()
    await ctx.send('> ```Misc Commands \n> .nitro / sends a random nitro link (if your lucky you might get nitro! \n> .spam (amount, message) / spams messages lol \n> .everyone / does @ everyone in a secret way \n> .hypesquad / changes your house (Bravery, Brilliance, balance) \n> .gcname (name) / changes gc name \n> .firstmessage / sends first message link```')

@client.command()
async def spamgcname(ctx, *, text):
    await ctx.message.delete()
    if isinstance(ctx.message.channel, discord.GroupChannel):
        watermark = f"{text}"
        name = ""
        for letter in watermark:
            name = name + letter
            await ctx.message.channel.edit(name=name)

@client.command()
async def gcname(ctx, *, name):
    await ctx.message.delete()
    await ctx.message.channel.edit(name=name)





@client.command(aliases=['changehypesquad'])
async def hypesquad(ctx, house): # b'\xfc'
    await ctx.message.delete()
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Changed Your Hypesquad To {RESET}{house}" + Fore.RESET)
    request = requests.Session()
    headers = {
      'Authorization': token,
      'Content-Type': 'application/json',
      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) discord/0.0.305 Chrome/69.0.3497.128 Electron/4.0.8 Safari/537.36'
    }    
    if house == "bravery":
      payload = {'house_id': 1}
    elif house == "brilliance":
      payload = {'house_id': 2}
    elif house == "balance":
      payload = {'house_id': 3}
    elif house == "random":
        houses = [1, 2, 3]
        payload = {'house_id': random.choice(houses)}
    try:
        request.post('https://discordapp.com/api/v6/hypesquad/online', headers=headers, json=payload, timeout=10)
    except Exception as e:
        print(f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Error: {Fore.WHITE}{e}"+Fore.RESET)
    

@client.command()
async def everyone(ctx): # b'\xfc'
    await ctx.message.delete()
    await ctx.send('https://@everyone@google.com')

@client.command()
async def spam(ctx, amount: int, *, message): # b'\xfc'
    await ctx.message.delete()    
    for _i in range(amount):
        await ctx.send(message)


@client.command()
async def nitro(ctx): # b'\xfc'
    await ctx.message.delete()
    await ctx.send(Nitro())







    

#TOOLS

@client.command()
async def tools(ctx):
    await ctx.message.delete()
    await ctx.send('> ``` Tool Commands \n> .leavegroups / leaves all the groups \n> .purge (amount) / deletes your text \n> .read / reads all your messages/notfications \n> .reverse (text) / reverses your message \n> .bold (text) / turns your messages bold \n> .mini (text) / makes your text MINI \n> .lenny / sends the lenny thing \n> .shrug / sends the shrug \n> .tableflip / flips over a table? \n> .unflip / unflips the table lmfao \n> .empty / sends a empty message \n> .encode (text) / encodes a message \n> .decode (text) / decodes a message \n> .copy (copys a server) \n> .discordid / shows your discord id in log \n> .serverid / shows the server id in log \n> .clearlog / clears the log \n> .roleinfo (role) shows role info in log \n> .memberinfo (user) / shows the users info in log \n> .backupfriends / puts your friends discord name and tag in text file \n> .invite / sends server invite \n> .ignore / ignores all friend requests \n> .clearblocked / clear blocked people```')

@client.command()
async def mini(ctx, *, text=None):
	await ctx.message.delete()
	if text is None:
		await ctx.send("what do you want as a small message???")
	else:
		minitext = text.replace('a', 'ᴬ').replace('A', 'ᴬ').replace(
		    'b',
		    'ᴮ').replace('B', 'ᴮ').replace('c', 'ᶜ').replace('C', 'ᶜ').replace(
		        'd', 'ᴰ').replace('D', 'ᴰ').replace('e', 'ᴱ').replace(
		            'E', 'ᴱ').replace('f', 'ᶠ').replace('F', 'ᶠ').replace(
		                'g', 'ᴳ').replace('G', 'ᴳ').replace('h', 'ᴴ').replace(
		                    'H',
		                    'ᴴ').replace('i', 'ᴵ').replace('I', 'ᴵ').replace(
		                        'j', 'ᴶ').replace('J', 'ᴶ').replace(
		                            'k', 'ᴷ').replace('K', 'ᴷ').replace(
		                                'l', 'ᴸ').replace('L', 'ᴸ').replace(
		                                    'm', 'ᴹ'
		                                ).replace('M', 'ᴹ').replace(
		                                    'n', 'ᴺ'
		                                ).replace('N', 'ᴺ').replace(
		                                    'o', 'ᴼ'
		                                ).replace('O', 'ᴼ').replace(
		                                    'p', 'ᴾ'
		                                ).replace('P', 'ᴾ').replace(
		                                    'q', 'ᵠ'
		                                ).replace('Q', 'ᵠ').replace(
		                                    'r', 'ᴿ'
		                                ).replace('R', 'ᴿ').replace(
		                                    's', 'ˢ'
		                                ).replace('S', 'ˢ').replace(
		                                    't', 'ᵀ'
		                                ).replace('T', 'ᵀ').replace(
		                                    'u', 'ᵁ'
		                                ).replace('U', 'ᵁ').replace(
		                                    'v', 'ⱽ'
		                                ).replace('V', 'ⱽ').replace(
		                                    'w', 'ᵂ'
		                                ).replace('W', 'ᵂ').replace(
		                                    'x', 'ˣ').replace(
		                                        'X', 'ˣ').replace(
		                                            'y', 'ʸ').replace(
		                                                'Y', 'ʸ').replace(
		                                                    'z', 'ᶻ').replace(
		                                                        'Z', 'ᶻ')
		await ctx.send(minitext)

@client.command()
async def ignore(ctx):
    await ctx.message.delete()
    for relationship in client.user.relationships:
        if relationship is discord.RelationshipType.incoming_request:
            relationship.delete()
    
@client.command()
async def clearblocked(ctx):
    await ctx.message.delete()
    print(client.user.relationships)
    for relationship in client.user.relationships:
        if relationship is discord.RelationshipType.blocked:
            print(relationship)
            await relationship.delete()

@client.command(aliases=["fancy"])
async def ascii(ctx, *, text):
    await ctx.message.delete()
    r = requests.get(
        f'http://artii.herokuapp.com/make?text={urllib.parse.quote_plus(text)}'
    ).text
    if len('```' + r + '```') > 2000:
        return
    await ctx.send(f"```{r}```")

@client.command(aliases=['ri', 'role'])
async def roleinfo(ctx, *, role: discord.Role): # b'\xfc'
    await ctx.message.delete()
    guild = ctx.guild
    since_created = (ctx.message.created_at - role.created_at).days
    role_created = role.created_at.strftime("%d %b %Y %H:%M")
    created_on = "{} ({} days ago)".format(role_created, since_created)
    colorr = role.colour
    users = len([x for x in guild.members if role in x.roles])
    if str(role.colour) == "#000000":
        colour = "default"
        color = ("#%06x" % random.randint(0, 0xFFFFFF))
        color = int(colour[1:], 16)
    else:
        colour = str(role.colour).upper()
        color = role.colour
    print(Fore.MAGENTA + f"\n{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Role Name: {Fore.RESET}{role.name}" + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Created on: {Fore.RESET}{created_on}" + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Managed: {Fore.RESET}{role.managed}" + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Can Mention: {Fore.RESET}{role.mentionable}" + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Users: {Fore.RESET}{users}" + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Color: {Fore.RESET}{colorr}" + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Role ID: {Fore.RESET}{role.id}\n" + Fore.RESET)


@client.command(name='backup-f', aliases=['friendbackup', 'friend-backup', 'backup-friends', 'backupf'])
async def _backup_friends(ctx): # b'\xfc'
    await ctx.message.delete()
    for friend in client.user.friends:
       friendlist = (friend.name)+'#'+(friend.discriminator)   
       with open('Backup/Friends.txt', 'a+') as f:
           f.write(friendlist+"\n" )
    for block in client.user.blocked:
        blocklist = (block.name)+'#'+(block.discriminator)
        with open('Backup/Blocked.txt', 'a+') as f: 
            f.write(blocklist+"\n" )

@client.command()
async def memberinfo(ctx, *, user: discord.Member = None): # b'\xfc'
    await ctx.message.delete()
    if user is None:
        user = ctx.author      
    dateformat = "%a, %d %b %Y %I:%M %p"
    perm_string = ', '.join([str(p[0]).replace("_", " ").title() for p in user.guild_permissions if p[1]])
    print(Fore.MAGENTA + f"\n{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Name: {Fore.RESET}{user}" + Fore.RESET)
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} ID: {Fore.RESET}{user.id}") 
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Guild Permissons: {Fore.RESET}{perm_string}\n") 
    

@client.command()
async def leavegroups(ctx): # b'\xfc'
    await ctx.message.delete()
    for channel in client.private_channels:
        if isinstance(channel, discord.GroupChannel):
            await channel.leave()
            print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Successfully Left Every Group" + Fore.RESET)

@client.command(aliases=['clearconsole', 'consoleclear'])
async def clearlog(ctx): # b'\xfc'
    await ctx.message.delete()
    Clear()
    print(f''' 
   
                                        █████╗░██████╗░██████╗░██╗████████╗
                                        ██╔══██╗██╔══██╗██╔══██╗██║╚══██╔══╝
                                        ██║░░██║██████╔╝██████╦╝██║░░░██║░░░
                                        ██║░░██║██╔══██╗██╔══██╗██║░░░██║░░░
                                        ╚█████╔╝██║░░██║██████╦╝██║░░░██║░░░
                                        ░╚════╝░╚═╝░░╚═╝╚═════╝░╚═╝░░░╚═╝░░
________________________________________________________________________________________________________________________
                                             
                                             {LIGHTMAGENTA}Connected: {RESET}{client.user.name}#{client.user.discriminator}
                                             {LIGHTMAGENTA}Prefix: .{RESET} 
________________________________________________________________________________________________________________________                                              ''')




        


    


@client.command()
async def discordid(ctx):
    await ctx.message.delete()
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Discord ID: {RESET}{client.user.id}" + Fore.RESET)

@client.command()
async def serverid(ctx):
    await ctx.message.delete()
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {ctx.guild.name}'s ID: {RESET}{ctx.guild.id}" + Fore.RESET)

@client.command()
async def dm(ctx, user : discord.Member): # b'\xfc'
    await ctx.message.delete()
    user = client.get_user(user.id)
    if ctx.author.id == client.user.id:
        return
    else:
        try:
            print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {ctx.user.name}'s ID: {RESET}{client.get_user(user.id)}" + Fore.RESET)
        except:
            pass   




@client.command()
async def copy(ctx): # b'\xfc'
    await ctx.message.delete()
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Successfully Copyed Server" + Fore.RESET)
    await client.create_guild(f'backup-{ctx.guild.name}')
    await asyncio.sleep(4)
    for g in client.guilds:
        if f'backup-{ctx.guild.name}' in g.name:
            for c in g.channels:
                await c.delete()
            for cate in ctx.guild.categories:
                x = await g.create_category(f"{cate.name}")
                for chann in cate.channels:
                    if isinstance(chann, discord.VoiceChannel):
                        await x.create_voice_channel(f"{chann}")
                    if isinstance(chann, discord.TextChannel):
                        await x.create_text_channel(f"{chann}")

                

                        
    try:                
        await g.edit(icon=ctx.guild.icon_url)
    except:
        pass



@client.command()
async def purge(ctx, amount: int): # b'\xfc'
    await ctx.message.delete()
    async for message in ctx.message.channel.history(limit=amount).filter(lambda m: m.author == client.user).map(lambda m: m):
        try:
           await message.delete()
        except:
            pass

@client.command(aliases=['markasread', 'ack'])
async def read(ctx): # b'\xfc'
    await ctx.message.delete()
    for guild in client.guilds:
        await guild.ack()

@client.command()
async def empty(ctx): # b'\xfc'
    await ctx.message.delete()
    await ctx.send(chr(173))

@client.command()
async def reverse(ctx, *, message): # b'\xfc'
    await ctx.message.delete()
    message = message[::-1]
    await ctx.send(message)

@client.command()
async def shrug(ctx): # b'\xfc'
    await ctx.message.delete()
    shrug = r'¯\_(ツ)_/¯'
    await ctx.send(shrug)

@client.command()
async def lenny(ctx): # b'\xfc'
    await ctx.message.delete()
    lenny = '( ͡° ͜ʖ ͡°)'
    await ctx.send(lenny)

@client.command()
async def tableflip(ctx): # b'\xfc'
    await ctx.message.delete()
    tableflip = '(╯°□°）╯︵ ┻━┻'
    await ctx.send(tableflip)

@client.command()
async def unflip(ctx): # b'\xfc'
    await ctx.message.delete()
    unflip = '┬─┬ ノ( ゜-゜ノ)'
    await ctx.send(unflip)

@client.command()
async def bold(ctx, *, message): # b'\xfc'
    await ctx.message.delete()
    await ctx.send('**'+message+'**')

@client.command()
async def exe(ctx, *, message):
    await ctx.message.delete()
    await ctx.send(f'{message}.exe⠀⠀                 ⎯⠀❐⠀⤬')

@client.command()
async def encode(ctx, *, string): # b'\xfc'
    await ctx.message.delete()
    decoded_stuff = base64.b64encode('{}'.format(string).encode('ascii'))
    encoded_stuff = str(decoded_stuff)
    encoded_stuff = encoded_stuff[2:len(encoded_stuff)-1]
    await ctx.send(f"> **Encoded Message:** \n> {encoded_stuff}")

@client.command()
async def decode(ctx, *, string): # b'\xfc'+
    await ctx.message.delete()  
    strOne = (string).encode("ascii")
    pad = len(strOne)%4
    strOne += b"="*pad
    encoded_stuff = codecs.decode(strOne.strip(),'base64')
    decoded_stuff = str(encoded_stuff)
    decoded_stuff = decoded_stuff[2:len(decoded_stuff)-1]
    await ctx.send(f"> **Decoded Message:** \n> {decoded_stuff}")

#fun

@client.command()
async def fun(ctx):
    await ctx.message.delete()
    await ctx.send('> ```Fun Commands \n> .minesweeper / plays a fun little game (try not to get bombed!) \n> .dog / sends a doggo pic \n> .cat / sends cat pic \n> .fox / sends fox pic \n> .sadcat / sends sad cat \n> .bird / sends bird pic \n> .cum / you will see... \n> .nine_eleven / yeah.. \n> .dsize (user) / shows dick size \n> .wyr / sends a would you rather in chat \n> .devowel (message) / no vowels today \n> .8ball (question) / yes or no \n> .hack (user) / tottaly real hack \n> .poll (question) \n> .rainbow (user) / turns role rainbow \n> .exe (message) / turns your message to exe \n> .virus (user) / injects trojan into person \n> .fortnite / shows fortnite player doing defualt dance```')

@client.command()
async def virus(ctx, user: discord.Member = None, *, virus: str = "trojan"):
        user = user or ctx.author
        list = (
            f"``[▓▓▓                    ] / {virus}-virus.exe Packing files.``",
            f"``[▓▓▓▓▓▓▓                ] - {virus}-virus.exe Packing files..``",
            f"``[▓▓▓▓▓▓▓▓▓▓▓▓           ] \ {virus}-virus.exe Packing files..``",
            f"``[▓▓▓▓▓▓▓▓▓▓▓▓▓▓         ] | {virus}-virus.exe Packing files..``",
            f"``[▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓      ] / {virus}-virus.exe Packing files..``",
            f"``[▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓   ] - {virus}-virus.exe Packing files..``",
            f"``[▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ] \ {virus}-virus.exe Packing files..``",
            f"``Successfully downloaded {virus}-virus.exe``",
            "``Injecting virus.   |``",
            "``Injecting virus..  /``",
            "``Injecting virus... -``",
            f"``Successfully Injected {virus}-virus.exe into {user.name}``",
        )
        for i in list:
            await asyncio.sleep(1.5)
            await ctx.message.edit(content=i)

@client.command()
async def fortnite(ctx):
    await ctx.message.delete()
    message = await ctx.send("""```
    ⣀⣤
⠀⠀⠀⠀⣿⠿⣶
⠀⠀⠀⠀⣿⣿⣀
⠀⠀⠀⣶⣶⣿⠿⠛⣶
⠤⣀⠛⣿⣿⣿⣿⣿⣿⣭⣿⣤
⠒⠀⠀⠀⠉⣿⣿⣿⣿⠀⠀⠉⣀
⠀⠤⣤⣤⣀⣿⣿⣿⣿⣀⠀⠀⣿
⠀⠀⠛⣿⣿⣿⣿⣿⣿⣿⣭⣶⠉
⠀⠀⠀⠤⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⣭⣿⣿⣿⠀⣿⣿⣿
⠀⠀⠀⣉⣿⣿⠿⠀⠿⣿⣿
⠀⠀⠀⠀⣿⣿⠀⠀⠀⣿⣿⣤
⠀⠀⠀⣀⣿⣿⠀⠀⠀⣿⣿⣿
⠀⠀⠀⣿⣿⣿⠀⠀⠀⣿⣿⣿
⠀⠀⠀⣿⣿⠛⠀⠀⠀⠉⣿⣿
⠀⠀⠀⠉⣿⠀⠀⠀⠀⠀⠛⣿
⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⣿⣿
⠀⠀⠀⠀⣛⠀⠀⠀⠀⠀⠀⠛⠿⠿⠿
⠀⠀⠀⠛⠛
```""")
    await asyncio.sleep(0)
    await message.edit(content="""```
   ⣀⣶⣀
⠀⠀⠀⠒⣛⣭
⠀⠀⠀⣀⠿⣿⣶
⠀⣤⣿⠤⣭⣿⣿
⣤⣿⣿⣿⠛⣿⣿⠀⣀
⠀⣀⠤⣿⣿⣶⣤⣒⣛
⠉⠀⣀⣿⣿⣿⣿⣭⠉
⠀⠀⣭⣿⣿⠿⠿⣿
⠀⣶⣿⣿⠛⠀⣿⣿
⣤⣿⣿⠉⠤⣿⣿⠿
⣿⣿⠛⠀⠿⣿⣿
⣿⣿⣤⠀⣿⣿⠿
⠀⣿⣿⣶⠀⣿⣿⣶
⠀⠀⠛⣿⠀⠿⣿⣿
⠀⠀⠀⣉⣿⠀⣿⣿
⠀⠶⣶⠿⠛⠀⠉⣿
⠀⠀⠀⠀⠀⠀⣀⣿
⠀⠀⠀⠀⠀⣶⣿⠿
```""")
    await asyncio.sleep(0)
    await message.edit(content="""```
⠀⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⠶⠀⠀⣀⣀
⠀⠀⠀⠀⠀⠀⣀⣀⣤⣤⣶⣿⣿⣿⣿⣿⣿
⠀⠀⣀⣶⣤⣤⠿⠶⠿⠿⠿⣿⣿⣿⣉⣿⣿
⠿⣉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⣤⣿⣿⣿⣀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣿⣶⣤
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⣿⣿⠿⣛⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠛⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿⣿⠿⠀⣿⣿⣿⠛
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠀⠀⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⠿⣿⠀⠀⣿⣶
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠛⠀⠀⣿⣿⣶
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⠤
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿
```""")
    await asyncio.sleep(0)
    await message.edit(content="""```
⠀⠀⣀
⠀⠿⣿⣿⣀
⠀⠉⣿⣿⣀
⠀⠀⠛⣿⣭⣀⣀⣤
⠀⠀⣿⣿⣿⣿⣿⠛⠿⣶⣀
⠀⣿⣿⣿⣿⣿⣿⠀⠀⠀⣉⣶
⠀⠀⠉⣿⣿⣿⣿⣀⠀⠀⣿⠉
⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿
⠀⣀⣿⣿⣿⣿⣿⣿⣿⣿⠿
⠀⣿⣿⣿⠿⠉⣿⣿⣿⣿
⠀⣿⣿⠿⠀⠀⣿⣿⣿⣿
⣶⣿⣿⠀⠀⠀⠀⣿⣿⣿
⠛⣿⣿⣀⠀⠀⠀⣿⣿⣿⣿⣶⣀
⠀⣿⣿⠉⠀⠀⠀⠉⠉⠉⠛⠛⠿⣿⣶
⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿
⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉
⣀⣶⣿⠛
```""")
    await asyncio.sleep(0)
    await message.edit(content="""```
⠀⠀⠀⠀⠀⠀⠀⣀⣀
⠀⠀⠀⠀⠀⠀⣿⣿⣿⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣤⣿
⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣶⣿⣿⣿⣶⣶⣤⣶⣶⠶⠛⠉⠉
⠀⠀⠀⠀⠀⠀⣤⣿⠿⣿⣿⣿⣿⣿⠀⠀⠉
⠛⣿⣤⣤⣀⣤⠿⠉⠀⠉⣿⣿⣿⣿
⠀⠉⠉⠉⠉⠉⠀⠀⠀⠀⠉⣿⣿⣿⣀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠛
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣛⣿⣿
⠀⠀⠀⠀⠀⠀⠀⣶⣿⣿⠛⠿⣿⣿⣿⣶⣤
⠀⠀⠀⠀⠀⠀⠀⣿⠛⠉⠀⠀⠀⠛⠿⣿⣿⣶⣀
⠀⠀⠀⠀⠀⠀⣿⣀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣶⣤
⠀⠀⠀⠀⠀⠛⠿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⣿⠿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠉⠉
```""")
    await asyncio.sleep(0)
    await message.edit(content="""```
⠀⠀⠀⠀⠀⠀⣤⣶⣶
⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣀⣀
⠀⠀⠀⠀⠀⣀⣶⣿⣿⣿⣿⣿⣿
⣤⣶⣀⠿⠶⣿⣿⣿⠿⣿⣿⣿⣿
⠉⠿⣿⣿⠿⠛⠉⠀⣿⣿⣿⣿⣿
⠀⠀⠉⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣤⣤
⠀⠀⠀⠀⠀⠀⠀⣤⣶⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⣀⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿
⠀⠀⠀⠀⣀⣿⣿⣿⠿⠉⠀⠀⣿⣿⣿⣿
⠀⠀⠀⠀⣿⣿⠿⠉⠀⠀⠀⠀⠿⣿⣿⠛
⠀⠀⠀⠀⠛⣿⣿⣀⠀⠀⠀⠀⠀⣿⣿⣀
⠀⠀⠀⠀⠀⣿⣿⣿⠀⠀⠀⠀⠀⠿⣿⣿
⠀⠀⠀⠀⠀⠉⣿⣿⠀⠀⠀⠀⠀⠀⠉⣿
⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⣀⣿
⠀⠀⠀⠀⠀⠀⣀⣿⣿
⠀⠀⠀⠀⠤⣿⠿⠿⠿
```""")
    await asyncio.sleep(0)
    await message.edit(content="""```
⠀⠀⠀⠀⣀
⠀⠀⣶⣿⠿⠀⠀⠀⣀⠀⣤⣤
⠀⣶⣿⠀⠀⠀⠀⣿⣿⣿⠛⠛⠿⣤⣀
⣶⣿⣤⣤⣤⣤⣤⣿⣿⣿⣀⣤⣶⣭⣿⣶⣀
⠉⠉⠉⠛⠛⠿⣿⣿⣿⣿⣿⣿⣿⠛⠛⠿⠿
⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⠿
⠀⠀⠀⠀⠀⠀⠀⠿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⣭⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠿
⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⠿
⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⠛⠿⣿⣤
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⠀⠀⠀⣿⣿⣤
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⣶⣿⠛⠉
⠀⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⠀⠀⠉
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉
```""")
    await asyncio.sleep(0)
    await message.edit(content="""```
⠀⠀⠀⠀⠀⠀⣶⣿⣶
⠀⠀⠀⣤⣤⣤⣿⣿⣿
⠀⠀⣶⣿⣿⣿⣿⣿⣿⣿⣶
⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⣿⣉⣿⣿⣿⣿⣉⠉⣿⣶
⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿
⠀⣤⣿⣿⣿⣿⣿⣿⣿⠿⠀⣿⣶
⣤⣿⠿⣿⣿⣿⣿⣿⠿⠀⠀⣿⣿⣤
⠉⠉⠀⣿⣿⣿⣿⣿⠀⠀⠒⠛⠿⠿⠿
⠀⠀⠀⠉⣿⣿⣿⠀⠀⠀⠀⠀⠀⠉
⠀⠀⠀⣿⣿⣿⣿⣿⣶
⠀⠀⠀⠀⣿⠉⠿⣿⣿
⠀⠀⠀⠀⣿⣤⠀⠛⣿⣿
⠀⠀⠀⠀⣶⣿⠀⠀⠀⣿⣶
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣭⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⠉
```""")
    await asyncio.sleep(1)
    await message.edit(content="""```
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣶
⠀⠀⠀⠀⠀⣀⣀⠀⣶⣿⣿⠶
⣶⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣤⣤
⠀⠉⠶⣶⣀⣿⣿⣿⣿⣿⣿⣿⠿⣿⣤⣀
⠀⠀⠀⣿⣿⠿⠉⣿⣿⣿⣿⣭⠀⠶⠿⠿
⠀⠀⠛⠛⠿⠀⠀⣿⣿⣿⣉⠿⣿⠶
⠀⠀⠀⠀⠀⣤⣶⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⠒
⠀⠀⠀⠀⣀⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⣿⣿⣿⠛⣭⣭⠉
⠀⠀⠀⠀⠀⣿⣿⣭⣤⣿⠛
⠀⠀⠀⠀⠀⠛⠿⣿⣿⣿⣭
⠀⠀⠀⠀⠀⠀⠀⣿⣿⠉⠛⠿⣶⣤
⠀⠀⠀⠀⠀⠀⣀⣿⠀⠀⣶⣶⠿⠿⠿
⠀⠀⠀⠀⠀⠀⣿⠛
⠀⠀⠀⠀⠀⠀⣭⣶
```""")
    await asyncio.sleep(0)
    await message.edit(content="""```
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣤
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿
⠀⠀⣶⠀⠀⣀⣤⣶⣤⣉⣿⣿⣤⣀
⠤⣤⣿⣤⣿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣀
⠀⠛⠿⠀⠀⠀⠀⠉⣿⣿⣿⣿⣿⠉⠛⠿⣿⣤
⠀⠀⠀⠀⠀⠀⠀⠀⠿⣿⣿⣿⠛⠀⠀⠀⣶⠿
⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⣿⣿⣿⣤⠀⣿⠿
⠀⠀⠀⠀⠀⠀⠀⣶⣿⣿⣿⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠿⣿⣿⣿⣿⣿⠿⠉⠉
⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣿⠿
⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠉
⠀⠀⠀⠀⠀⠀⠀⠀⣛⣿⣭⣶⣀
⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠉⠛⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⣿⣿
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣉⠀⣶⠿
⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿⠿
⠀⠀⠀⠀⠀⠀⠀⠛⠿⠛
```""")
    await asyncio.sleep(0)
    await message.edit(content="""```
⠀⠀⠀⣶⣿⣶
⠀⠀⠀⣿⣿⣿⣀
⠀⣀⣿⣿⣿⣿⣿⣿
⣶⣿⠛⣭⣿⣿⣿⣿
⠛⠛⠛⣿⣿⣿⣿⠿
⠀⠀⠀⠀⣿⣿⣿
⠀⠀⣀⣭⣿⣿⣿⣿⣀
⠀⠤⣿⣿⣿⣿⣿⣿⠉
⠀⣿⣿⣿⣿⣿⣿⠉
⣿⣿⣿⣿⣿⣿
⣿⣿⣶⣿⣿
⠉⠛⣿⣿⣶⣤
⠀⠀⠉⠿⣿⣿⣤
⠀⠀⣀⣤⣿⣿⣿
⠀⠒⠿⠛⠉⠿⣿
⠀⠀⠀⠀⠀⣀⣿⣿
⠀⠀⠀⠀⣶⠿⠿⠛
```""")

@client.command()
async def combine(ctx, name1, name2): # b'\xfc'
    await ctx.message.delete()
    name1letters = name1[:round(len(name1) / 2)]
    name2letters = name2[round(len(name2) / 2):]
    ship = "".join([name1letters, name2letters])
    emb = (discord.Embed(description=f"{ship}"))
    emb.set_author(name=f"{name1} + {name2}")
    await ctx.send(embed=emb)       

@client.command(aliases=['rainbowrole'])
async def rainbow(ctx, *, role):
    await ctx.message.delete()
    role = discord.utils.get(ctx.guild.roles, name=role)
    while True:
        try:
            await role.edit(role=role, colour=RandomColor())
            await asyncio.sleep(10)
        except:
            break

@client.command()
async def poll(ctx, *, option1):
    await ctx.message.delete()
    message = await ctx.send(
        f'> **Poll**: \n> {option1}')
    await message.add_reaction('✅')
    await message.add_reaction('❌')

client.snipe_history_dict = {}
client.sniped_message_dict = {}

@client.command(aliases=["9/11", "911", "terrorist"])
async def nine_eleven(ctx):
    await ctx.message.delete()
    invis = ""  # char(173)
    message = await ctx.send(f'''
{invis}:man_wearing_turban::airplane:    :office:           
''')
    await asyncio.sleep(0.5)
    await message.edit(content=f'''
{invis} :man_wearing_turban::airplane:   :office:           
''')
    await asyncio.sleep(0.5)
    await message.edit(content=f'''
{invis}  :man_wearing_turban::airplane:  :office:           
''')
    await asyncio.sleep(0.5)
    await message.edit(content=f'''
{invis}   :man_wearing_turban::airplane: :office:           
''')
    await asyncio.sleep(0.5)
    await message.edit(content=f'''
{invis}    :man_wearing_turban::airplane::office:           
''')
    await asyncio.sleep(0.5)
    await message.edit(content='''
        :boom::boom::boom:    
        ''')

@client.command()
async def snipe(ctx):
    await ctx.message.delete()
    currentChannel = ctx.channel.id
    if currentChannel in client.sniped_message_dict:
        await ctx.send(client.sniped_message_dict[currentChannel])
    else:
        await ctx.send("No message to snipe!", delete_after=3)          


@client.command()
async def hack(ctx, user: discord.Member = None):
    await ctx.message.delete()
    gender = ["Male", "Female", "Trans", "Other", "Retard"]
    age = str(random.randrange(10, 25))
    height = [
        '4\'6\"', '4\'7\"', '4\'8\"', '4\'9\"', '4\'10\"', '4\'11\"', '5\'0\"',
        '5\'1\"', '5\'2\"', '5\'3\"', '5\'4\"', '5\'5\"', '5\'6\"', '5\'7\"',
        '5\'8\"', '5\'9\"', '5\'10\"', '5\'11\"', '6\'0\"', '6\'1\"', '6\'2\"',
        '6\'3\"', '6\'4\"', '6\'5\"', '6\'6\"', '6\'7\"', '6\'8\"', '6\'9\"',
        '6\'10\"', '6\'11\"'
    ]
    weight = str(random.randrange(60, 300))
    hair_color = ["Black", "Brown", "Blonde", "White", "Gray", "Red"]
    skin_color = ["White", "Pale", "Brown", "Black", "Light-Skin"]
    religion = [
        "Christian", "Muslim", "Atheist", "Hindu", "Buddhist", "Jewish"
    ]
    sexuality = [
        "Straight", "Gay", "Homo", "Bi", "Bi-Sexual", "Lesbian", "Pansexual"
    ]
    education = [
        "High School", "College", "Middle School", "Elementary School",
        "Pre School", "Retard never went to school LOL"
    ]
    ethnicity = [
        "White", "African American", "Asian", "Latino", "Latina", "American",
        "Mexican", "Korean", "Chinese", "Arab", "Italian", "Puerto Rican",
        "Non-Hispanic", "Russian", "Canadian", "European", "Indian"
    ]
    occupation = [
        "Retard has no job LOL", "Certified discord retard", "Janitor",
        "Police Officer", "Teacher", "Cashier", "Clerk", "Waiter", "Waitress",
        "Grocery Bagger", "Retailer", "Sales-Person", "Artist", "Singer",
        "Rapper", "Trapper", "Discord Thug", "Gangster", "Discord Packer",
        "Mechanic", "Carpenter", "Electrician", "Lawyer", "Doctor",
        "Programmer", "Software Engineer", "Scientist"
    ]
    salary = [
        "Retard makes no money LOL", "$" + str(random.randrange(0, 1000)),
        '<$50,000', '<$75,000', "$100,000", "$125,000", "$150,000", "$175,000",
        "$200,000+"
    ]
    location = [
        "Retard lives in his mom's basement LOL", "America", "United States",
        "Europe", "Poland", "Mexico", "Russia", "Pakistan", "India",
        "Some random third world country", "Canada", "Alabama", "Alaska",
        "Arizona", "Arkansas", "California", "Colorado", "Connecticut",
        "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois",
        "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine",
        "Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi",
        "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire",
        "New Jersey", "New Mexico", "New York", "North Carolina",
        "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania",
        "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas",
        "Utah", "Vermont", "Virginia", "Washington", "West Virginia",
        "Wisconsin", "Wyoming"
    ]
    email = [
        "@gmail.com", "@yahoo.com", "@hotmail.com", "@outlook.com",
        "@protonmail.com", "@disposablemail.com", "@aol.com", "@edu.com",
        "@icloud.com", "@gmx.net", "@yandex.com"
    ]
    dob = f'{random.randrange(1, 13)}/{random.randrange(1, 32)}/{random.randrange(1950, 2021)}'
    name = [
        'James Smith', "Michael Smith", "Robert Smith", "Maria Garcia",
        "David Smith", "Maria Rodriguez", "Mary Smith", "Maria Hernandez",
        "Maria Martinez", "James Johnson", "Catherine Smoaks", "Cindi Emerick",
        "Trudie Peasley", "Josie Dowler", "Jefferey Amon", "Kyung Kernan",
        "Lola Barreiro", "Barabara Nuss", "Lien Barmore", "Donnell Kuhlmann",
        "Geoffrey Torre", "Allan Craft", "Elvira Lucien", "Jeanelle Orem",
        "Shantelle Lige", "Chassidy Reinhardt", "Adam Delange", "Anabel Rini",
        "Delbert Kruse", "Celeste Baumeister", "Jon Flanary", "Danette Uhler",
        "Xochitl Parton", "Derek Hetrick", "Chasity Hedge",
        "Antonia Gonsoulin", "Tod Kinkead", "Chastity Lazar", "Jazmin Aumick",
        "Janet Slusser", "Junita Cagle", "Stepanie Blandford", "Lang Schaff",
        "Kaila Bier", "Ezra Battey", "Bart Maddux", "Shiloh Raulston",
        "Carrie Kimber", "Zack Polite", "Marni Larson", "Justa Spear"
    ]
    phone = f'({random.randrange(0, 10)}{random.randrange(0, 10)}{random.randrange(0, 10)})-{random.randrange(0, 10)}{random.randrange(0, 10)}{random.randrange(0, 10)}-{random.randrange(0, 10)}{random.randrange(0, 10)}{random.randrange(0, 10)}{random.randrange(0, 10)}'
    if user is None:
        user = ctx.author
        password = [
            'password', '123', 'mypasswordispassword', user.name + "iscool123",
            user.name + "isdaddy", "daddy" + user.name, "ilovediscord",
            "i<3discord", "furryporn456", "secret", "123456789", "apple49",
            "redskins32", "princess", "dragon", "password1", "1q2w3e4r",
            "ilovefurries"
        ]
        message = await ctx.send(f"`Hacking {user}...\n`")
        await asyncio.sleep(1)
        await message.edit(
            content=f"`Hacking {user}...\nHacking into the mainframe...\n`")
        await asyncio.sleep(1)
        await message.edit(
            content=
            f"`Hacking {user}...\nHacking into the mainframe...\nCaching data...`"
        )
        await asyncio.sleep(1)
        await message.edit(
            content=
            f"`Hacking {user}...\nHacking into the mainframe...\nCaching data...\nCracking SSN information...\n`"
        )
        await asyncio.sleep(1)
        await message.edit(
            content=
            f"`Hacking {user}...\nHacking into the mainframe...\nCaching data...\nCracking SSN information...\nBruteforcing love life details...`"
        )
        await asyncio.sleep(1)
        await message.edit(
            content=
            f"`Hacking {user}...\nHacking into the mainframe...\nCaching data...\nCracking SSN information...\nBruteforcing love life details...\nFinalizing life-span dox details\n`"
        )
        await asyncio.sleep(1)
        await message.edit(
            content=
            f"```Successfully hacked {user}\nName: {random.choice(name)}\nGender: {random.choice(gender)}\nAge: {age}\nHeight: {random.choice(height)}\nWeight: {weight}\nHair Color: {random.choice(hair_color)}\nSkin Color: {random.choice(skin_color)}\nDOB: {dob}\nLocation: {random.choice(location)}\nPhone: {phone}\nE-Mail: {user.name + random.choice(email)}\nPasswords: {random.choices(password, k=3)}\nOccupation: {random.choice(occupation)}\nAnnual Salary: {random.choice(salary)}\nEthnicity: {random.choice(ethnicity)}\nReligion: {random.choice(religion)}\nSexuality: {random.choice(sexuality)}\nEducation: {random.choice(education)}```"
        )
    else:
        password = [
            'password', '123', 'mypasswordispassword', user.name + "iscool123",
            user.name + "isdaddy", "daddy" + user.name, "ilovediscord",
            "i<3discord", "furryporn456", "secret", "123456789", "apple49",
            "redskins32", "princess", "dragon", "password1", "1q2w3e4r",
            "ilovefurries"
        ]
        message = await ctx.send(f"`Hacking {user}...\n`")
        await asyncio.sleep(1)
        await message.edit(
            content=f"`Hacking {user}...\nHacking into the mainframe...\n`")
        await asyncio.sleep(1)
        await message.edit(
            content=
            f"`Hacking {user}...\nHacking into the mainframe...\nCaching data...`"
        )
        await asyncio.sleep(1)
        await message.edit(
            content=
            f"`Hacking {user}...\nHacking into the mainframe...\nCaching data...\nCracking SSN information...\n`"
        )
        await asyncio.sleep(1)
        await message.edit(
            content=
            f"`Hacking {user}...\nHacking into the mainframe...\nCaching data...\nCracking SSN information...\nBruteforcing love life details...`"
        )
        await asyncio.sleep(1)
        await message.edit(
            content=
            f"`Hacking {user}...\nHacking into the mainframe...\nCaching data...\nCracking SSN information...\nBruteforcing love life details...\nFinalizing life-span dox details\n`"
        )
        await asyncio.sleep(1)
        await message.edit(
            content=
            f"```Successfully hacked {user}\nName: {random.choice(name)}\nGender: {random.choice(gender)}\nAge: {age}\nHeight: {random.choice(height)}\nWeight: {weight}\nHair Color: {random.choice(hair_color)}\nSkin Color: {random.choice(skin_color)}\nDOB: {dob}\nLocation: {random.choice(location)}\nPhone: {phone}\nE-Mail: {user.name + random.choice(email)}\nPasswords: {random.choices(password, k=3)}\nOccupation: {random.choice(occupation)}\nAnnual Salary: {random.choice(salary)}\nEthnicity: {random.choice(ethnicity)}\nReligion: {random.choice(religion)}\nSexuality: {random.choice(sexuality)}\nEducation: {random.choice(education)}```"
        )


@client.command()
async def tweet(ctx, username: str, *, message: str): # b'\xfc'
    await ctx.message.delete()
    async with aiohttp.ClientSession() as cs:
        async with cs.get(f"https://nekobot.xyz/api/imagegen?type=tweet&username={username}&text={message}") as r:
            res = await r.json()
            em = discord.Embed()
            em.set_image(url=res["message"])
            await ctx.send(url=res["message"])

@client.command(name='8ball')
async def _ball(ctx, *, question): # b'\xfc'
    await ctx.message.delete()
    responses = [
      f'> **{question}**\n> That is a resounding no',
      f'> **{question}**\n> It is not looking likely',
      f'> **{question}**\n> Too hard to tell',
      f'> **{question}**\n> It is quite possible',
      f'> **{question}**\n> That is a definite yes!',
      f'> **{question}**\n> Maybe',
      f'> **{question}**\n> There is a good chance'
    ]
    answer = random.choice(responses)
    await ctx.send(answer)



@client.command()
async def dog(ctx): # b'\xfc'
    await ctx.message.delete()
    r = requests.get("https://dog.ceo/api/breeds/image/random").json()
    em = discord.Embed()
    em.set_image(url=str(r['message']))
    try:
        await ctx.send(embed=em)
    except:
        await ctx.send(str(r['message'])) 





@client.command(aliases=['dong', 'penis'])
async def dsize(ctx, *, user: discord.Member = None): 
    await ctx.message.delete()
    if user is None:
        user = ctx.author
    size = random.randint(1, 15)
    dong = ""
    for _i in range(0, size):
        dong += "="
    await ctx.send(f"> {user}'s Dick size \n> 8{dong}D")
    

@client.command(aliases=['wouldyourather', 'would-you-rather', 'wyrq'])
async def wyr(ctx):  
    await ctx.message.delete()
    r = requests.get('https://www.conversationstarters.com/wyrqlist.php').text
    soup = bs4(r, 'html.parser')
    qa = soup.find(id='qa').text
    qb = soup.find(id='qb').text
    message = await ctx.send(f"{qa}\nor\n{qb}")
    await message.add_reaction("🅰")
    await message.add_reaction("🅱")

@client.command(aliases=['dvwl'])
async def devowel(ctx, *, text): # b'\xfc'
    await ctx.message.delete()
    dvl = text.replace('a', '').replace('A', '').replace('e', '')\
            .replace('E', '').replace('i', '').replace('I', '')\
            .replace('o', '').replace('O', '').replace('u', '').replace('U', '')
    await ctx.send(dvl)

@client.command(aliases=["jerkoff", "ejaculate", "orgasm"])
async def cum(ctx):
    await ctx.message.delete()
    message = await ctx.send('''
            :ok_hand:            :smile:
   :eggplant: :zzz: :necktie: :eggplant: 
                   :oil:     :nose:
                 :zap: 8=:punch:=D 
             :trumpet:      :eggplant:''')
    await asyncio.sleep(0.5)
    await message.edit(content='''
                      :ok_hand:            :smiley:
   :eggplant: :zzz: :necktie: :eggplant: 
                   :oil:     :nose:
                 :zap: 8==:punch:D 
             :trumpet:      :eggplant:  
     ''')
    await asyncio.sleep(0.5)
    await message.edit(content='''
                      :ok_hand:            :grimacing:
   :eggplant: :zzz: :necktie: :eggplant: 
                   :oil:     :nose:
                 :zap: 8=:punch:=D 
             :trumpet:      :eggplant:  
     ''')
    await asyncio.sleep(0.5)
    await message.edit(content='''
                      :ok_hand:            :persevere:
   :eggplant: :zzz: :necktie: :eggplant: 
                   :oil:     :nose:
                 :zap: 8==:punch:D 
             :trumpet:      :eggplant:   
     ''')
    await asyncio.sleep(0.5)
    await message.edit(content='''
                      :ok_hand:            :confounded:
   :eggplant: :zzz: :necktie: :eggplant: 
                   :oil:     :nose:
                 :zap: 8=:punch:=D 
             :trumpet:      :eggplant: 
     ''')
    await asyncio.sleep(0.5)
    await message.edit(content='''
                       :ok_hand:            :tired_face:
   :eggplant: :zzz: :necktie: :eggplant: 
                   :oil:     :nose:
                 :zap: 8==:punch:D 
             :trumpet:      :eggplant:    
             ''')
    await asyncio.sleep(0.5)
    await message.edit(contnet='''
                       :ok_hand:            :weary:
   :eggplant: :zzz: :necktie: :eggplant: 
                   :oil:     :nose:
                 :zap: 8=:punch:= D:sweat_drops:
             :trumpet:      :eggplant:        
     ''')
    await asyncio.sleep(0.5)
    await message.edit(content='''
                       :ok_hand:            :dizzy_face:
   :eggplant: :zzz: :necktie: :eggplant: 
                   :oil:     :nose:
                 :zap: 8==:punch:D :sweat_drops:
             :trumpet:      :eggplant:                 :sweat_drops:
     ''')
    await asyncio.sleep(0.5)
    await message.edit(content='''
                       :ok_hand:            :drooling_face:
   :eggplant: :zzz: :necktie: :eggplant: 
                   :oil:     :nose:
                 :zap: 8==:punch:D :sweat_drops:
             :trumpet:      :eggplant:                 :sweat_drops:
     ''') 

@client.command()
async def minesweeper(ctx, size: int = 5): # b'\xfc'
    await ctx.message.delete()
    size = max(min(size, 8), 2)
    bombs = [[random.randint(0, size - 1), random.randint(0, size - 1)] for x in range(int(size - 1))]
    is_on_board = lambda x, y: 0 <= x < size and 0 <= y < size
    has_bomb = lambda x, y: [i for i in bombs if i[0] == x and i[1] == y]
    message = "**Minesweeper (click the tiles)**:\n"
    for y in range(size):
        for x in range(size):
            tile = "||{}||".format(chr(11036))
            if has_bomb(x, y):
                tile = "||{}||".format(chr(128163))
            else:
                count = 0
                for xmod, ymod in m_offets:
                    if is_on_board(x + xmod, y + ymod) and has_bomb(x + xmod, y + ymod):
                        count += 1
                if count != 0:
                    tile = "||{}||".format(m_numbers[count - 1])
            message += tile
        message += "\n"
    await ctx.send(message)









#ACCOUNT

@client.command()
async def account(ctx):
    await ctx.message.delete()
    await ctx.send('> ``` Account Commands \n> .watching (text) / displays watching thing \n> .listening (text) / displays listening thing```')






@client.command()
async def listening(ctx, *, message): # b'\xfc'
    await ctx.message.delete()
    await client.change_presence(
        activity=discord.Activity(
            type=discord.ActivityType.listening, 
            name=message, 
        ))

@client.command()
async def watching(ctx, *, message): # b'\xfc'
    await ctx.message.delete()
    await client.change_presence(
        activity=discord.Activity(
            type=discord.ActivityType.watching, 
            name=message
        ))


#RAID

@client.command()
async def raid(ctx):
    await ctx.message.delete()
    await ctx.send('> ``` Raiding Commands \n> .orbitcrash (servername) (channel name) / crashes the discord server by deleting EVERYTHING (basicly all in 1) \n> .deletechannels / deletes all the channels \n> .deleteroles / deletes all the roles \n> .deleteemjoi / deletes all the emojis \n> .kickall / kicks everyone in the server \n> .banall / bans everyone \n> .channelspam (name) / spams channels (example: .channelspam hello 25) \n> .categoryspam (name) / spams categorys \n> .rolespam (name) / spams roles (example: .rolespam hello 200) \n> .destroylog / destroys the log with stuff \n> .allperms / everyone gets admin \n> .everyonespam (text) / everyone on the server forced to type something (example: .everyonespam orbitisbest) \n> .servername (name) / changes the server name (example: .servername Orbit) \n> .massping / pings everyone ALOT of times (1k in under 5 seconds) \n> .dmallf (message)  / sends everyone in that server a message \n> .channelnuke (channel name) / deletes all the channels and creates 1 \n> .renamechannels (text) / renames all the channels\n> .deleteicon / delts the icon \n> .deletebanner / deletes banner \n> .pingspam (user) / pings the shit outa somebody \n> .massmention / mentions everyone \n> .massunban / unbans everyone (not tested) \n> .webhookspam / only shows in uiversion```')


@client.command()
async def orbitcrash(ctx, servername, channelname): # b'\xfc'
    await ctx.message.delete()
    if not ctx.author.permissions_in(ctx.channel).manage_channels:
         print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} You dont have permissons!" + Fore.RESET)

    try:
        await ctx.guild.edit(
            name=f"{servername}", 
            icon=None,
            Banner=None,
            )  
    except:
        pass   


    

    

    

  

    for chan in ctx.guild.channels:
        try:
            await chan.delete()
            print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {chan.name} was deleted." + Fore.RESET)
        except:
            pass

    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Deleted Icon" + Fore.RESET) 
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Deleted Banner" + Fore.RESET) 
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Changed Server Name To {Fore.WHITE}{servername}" + Fore.RESET) 

    await ctx.guild.create_text_channel(name=f"{channelname}")
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Created Channel {Fore.WHITE}{channelname}" + Fore.RESET)

    guild = ctx.guild
    role = discord.utils.get(guild.roles, name = "@everyone")
    await role.edit(permissions = Permissions.all())

@client.command()
async def ping(ctx, *, user: discord.Member = None): # b'\xfc'
    await ctx.message.delete()
    if user is None:
        user = ctx.author      
    dateformat = "%a, %d %b %Y %I:%M %p"
    perm_string = ', '.join([str(p[0]).replace("_", " ").title() for p in user.guild_permissions if p[1]])
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")
    await ctx.send(f"<@{user.id}>")

@client.command(aliases=["purgebans", "unbanall"])
async def massunban(ctx):
    await ctx.message.delete()
    banlist = await ctx.guild.bans()
    for users in banlist:
        try:
            await asyncio.sleep(2)
            await ctx.guild.unban(user=users.user)
        except:
            pass
    
    

@client.command()
async def massmention(ctx, *, message=None):
    await ctx.message.delete()
    if len(list(ctx.guild.members)) >= 50:
        userList = list(ctx.guild.members)
        random.shuffle(userList)
        sampling = random.choices(userList, k=50)
        if message is None:
            post_message = ""
            for user in sampling:
                post_message += user.mention
            await ctx.send(post_message)
        else:
            post_message = message + "\n\n"
            for user in sampling:
                post_message += user.mention
            await ctx.send(post_message)
    else:
        print(list(ctx.guild.members))
        if message is None:
            post_message = ""
            for user in list(ctx.guild.members):
                post_message += user.mention
            await ctx.send(post_message)
        else:
            post_message = message + "\n\n"
            for user in list(ctx.guild.members):
                post_message += user.mention
            await ctx.send(post_message)


@client.command()
async def nigger(ctx): # b'\xfc'

    await ctx.message.delete()
   
    if not ctx.author.permissions_in(ctx.channel).manage_channels:
         print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} You dont have permissons!" + Fore.RESET)

    try:
        await ctx.guild.edit(
            name=f"NIGGER",
            )  
    except:
        pass   

    for _i in range(20):
            await ctx.guild.create_text_channel(name=f"nigger")
        
        

    for channel in list(ctx.guild.channels):
        try:
            await ctx.send("@everyone nigger nigger nigger")
            
        except:
         pass

    

    
    
    
    

    

  

    

    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Deleted Icon" + Fore.RESET) 
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Deleted Banner" + Fore.RESET) 
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Changed Server Name To {Fore.WHITE}NIGGER" + Fore.RESET) 

    for rolee in list(ctx.guild.roles):
        try:
            await rolee.delete()
            print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {rolee.name} was deleted." + Fore.RESET)
        except:
            pass

    await ctx.guild.create_role(name=f"NIGGER")

    await ctx.guild.create_text_channel(name=f"NIGGER")
    await ctx.guild.create_text_channel(name=f"NIGGER")
    await ctx.guild.create_text_channel(name=f"NIGGER")
    await ctx.guild.create_text_channel(name=f"NIGGER")
    await ctx.guild.create_text_channel(name=f"NIGGER")
    await ctx.guild.create_text_channel(name=f"NIGGER")
    await ctx.guild.create_text_channel(name=f"NIGGER")
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Created Channel {Fore.WHITE}NIGGER" + Fore.RESET)

    

    



    
    

@client.command()
async def deleteicon(ctx): # b'\xfc'
    await ctx.message.delete()
    if not ctx.author.permissions_in(ctx.channel).manage_channels:
         print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} You dont have permissons!" + Fore.RESET)
    try:
        await ctx.guild.edit(
            icon=None,
            
            
            
        )  
    except:
        pass   
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Deleted Icon" + Fore.RESET)  



@client.command()
async def deletebanner(ctx): # b'\xfc'
    await ctx.message.delete()
    if not ctx.author.permissions_in(ctx.channel).manage_channels:
         print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} You dont have permissons!" + Fore.RESET)
    try:
        await ctx.guild.edit(
            Banner=None,
            
            
            
        )  
    except:
        pass   
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Deleted Banner" + Fore.RESET)   
   
    

@client.command()
async def deletechannels(ctx): # b'\xfc'
    await ctx.message.delete()
    if not ctx.author.permissions_in(ctx.channel).manage_channels:
         print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} You dont have permisson to manage channels!" + Fore.RESET)
   
    for channel in list(ctx.guild.channels):
        try:
            await channel.delete()
            print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {channel.name} was deleted." + Fore.RESET)
            
        except:
            return

@client.command()
async def renamechannels(ctx, *, text): # b'\xfc'
    await ctx.message.delete()
    if not ctx.author.permissions_in(ctx.channel).manage_channels:
         print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} You dont have permisson to manage channels!" + Fore.RESET)
   
    for channel in list(ctx.guild.channels):
        try:
            await channel.edit(
            name=f"{text}",)

            print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} channel renamed to {RESET}{text}" + Fore.RESET)
            
        except:
            return

@client.command()
async def servername(ctx, *, servername): # b'\xfc'
    await ctx.message.delete()
    if not ctx.author.permissions_in(ctx.channel).manage_channels:
         print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} You dont have permisson to manage channels!" + Fore.RESET)
    try:
        await ctx.guild.edit(
            name=f"{servername}",
            
            
        )  
    except:
        pass   
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Changed Server Name To {Fore.WHITE}{servername}" + Fore.RESET)     
    

@client.command()
async def channelnuke(ctx, *, name):

    await ctx.message.delete()
    if not ctx.author.permissions_in(ctx.channel).manage_channels:
         print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} You dont have permisson to manage channels!" + Fore.RESET)

  

    for chan in ctx.guild.channels:
        try:
            await chan.delete()
            print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {chan.name} was deleted." + Fore.RESET)
        except:
            pass

    await ctx.guild.create_text_channel(name=f"{name}")
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Created Channel {Fore.WHITE}{name}" + Fore.RESET)

@client.command()
async def dmall(ctx, *, message): # b'\xfc'
    dm_message = f"{message}"
    await ctx.message.delete()
    
    for member in ctx.guild.members:
        try:
            if member.id == client.user.id:
                pass
            else:
                await member.send(dm_message)
                print(f"Sent to {member}")
                # To not be rate limited
                await asyncio.sleep(1)
        except:
            print(f"Couldn't send to {member}")

@client.command(pass_context=True)
async def massping(ctx):
    await ctx.message.delete()
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} type .stopmass to stop mass pinging" + Fore.RESET)
    global dmcssss
    dmcssss = True
    while dmcssss:
        async with ctx.typing():
             await ctx.channel.send("@everyone")

@client.command(pass_context=True)
async def massping1(ctx):
    await ctx.message.delete()

    
    for userr in list(ctx.guild.members):
        try:
            await asyncio.sleep(5)    
            await ctx.channel.send(f"<@{userr.id}>")
        except:
            pass


    


@client.command()
async def stopmass(ctx):
	await ctx.message.delete()
	print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Mass Pinging Disabled" + Fore.RESET)
	global dmcssss
	dmcssss = False
    

@client.command()
async def rolespam(ctx, name):
    await ctx.message.delete()
    for _i in range(250):
            await ctx.guild.create_role(name=f"{name}")
        

        
        
        
        

@client.command()
async def channelspam(ctx, *, name):
        await ctx.message.delete()
        
        for _i in range(20):
            await ctx.guild.create_text_channel(name=f"{name}")
        
        print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Created 20 Channel With The Name {name}" + Fore.RESET)
        
@client.command()
async def categoryspam(ctx, name):
        await ctx.message.delete()
        
        for _i in range(20):
            await ctx.guild.create_category(name=f"{name}")
        
        print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Created 20 Categorys With The Name {name}" + Fore.RESET)



@client.command() 
async def deleteroles(ctx): # b'\xfc'
    await ctx.message.delete()
    for role in list(ctx.guild.roles):
        try:
            await role.delete()
            print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {role.name} was deleted." + Fore.RESET)
        except:
            pass

@client.command()
async def deleteemoji(ctx):
  await ctx.message.delete()
    
  for emoji in list(ctx.guild.emojis):
     
       await emoji.delete()
       
       print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} {emoji.name} was deleted." + Fore.RESET)

@client.command()
async def allperms(ctx):
    await ctx.message.delete()
    guild = ctx.guild
    role = discord.utils.get(guild.roles, name = "@everyone")
    await role.edit(permissions = Permissions.all())
    print(Fore.MAGENTA + f"{RESET}[{Fore.MAGENTA}+{RESET}]{Fore.MAGENTA} Gave Every All Perms" + Fore.RESET)

@client.command()
async def kickall(ctx): # b'\xfc'
    await ctx.message.delete()
    for user in list(ctx.guild.members):
        try:
            await user.kick()
            print(Fore.MAGENTA + f"{ctx.guild.member.name}#{ctx.guild.member.discriminator} Was Kicked" + Fore.RESET)
        except:
            pass    
        

@client.command()
async def banall(ctx): # b'\xfc'
    await ctx.message.delete()
    for user in list(ctx.guild.members):
        try:
            await user.ban()
            print(Fore.MAGENTA + f"{ctx.guild.member.name}#{ctx.guild.member.discriminator} Was Banned" + Fore.RESET)
        except:
         pass





client.run(token, bot=False)



